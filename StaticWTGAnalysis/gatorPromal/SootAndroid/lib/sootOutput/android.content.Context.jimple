public abstract class android.content.Context extends java.lang.Object
{
    public static final int MODE_PRIVATE;
    public static final int MODE_WORLD_READABLE;
    public static final int MODE_WORLD_WRITEABLE;
    public static final int MODE_APPEND;
    public static final int MODE_MULTI_PROCESS;
    public static final int MODE_ENABLE_WRITE_AHEAD_LOGGING;
    public static final int BIND_AUTO_CREATE;
    public static final int BIND_DEBUG_UNBIND;
    public static final int BIND_NOT_FOREGROUND;
    public static final int BIND_ABOVE_CLIENT;
    public static final int BIND_ALLOW_OOM_MANAGEMENT;
    public static final int BIND_WAIVE_PRIORITY;
    public static final int BIND_IMPORTANT;
    public static final int BIND_ADJUST_WITH_ACTIVITY;
    public static final java.lang.String POWER_SERVICE;
    public static final java.lang.String WINDOW_SERVICE;
    public static final java.lang.String LAYOUT_INFLATER_SERVICE;
    public static final java.lang.String ACCOUNT_SERVICE;
    public static final java.lang.String ACTIVITY_SERVICE;
    public static final java.lang.String ALARM_SERVICE;
    public static final java.lang.String NOTIFICATION_SERVICE;
    public static final java.lang.String ACCESSIBILITY_SERVICE;
    public static final java.lang.String KEYGUARD_SERVICE;
    public static final java.lang.String LOCATION_SERVICE;
    public static final java.lang.String SEARCH_SERVICE;
    public static final java.lang.String SENSOR_SERVICE;
    public static final java.lang.String STORAGE_SERVICE;
    public static final java.lang.String WALLPAPER_SERVICE;
    public static final java.lang.String VIBRATOR_SERVICE;
    public static final java.lang.String CONNECTIVITY_SERVICE;
    public static final java.lang.String WIFI_SERVICE;
    public static final java.lang.String WIFI_P2P_SERVICE;
    public static final java.lang.String NSD_SERVICE;
    public static final java.lang.String AUDIO_SERVICE;
    public static final java.lang.String MEDIA_ROUTER_SERVICE;
    public static final java.lang.String TELEPHONY_SERVICE;
    public static final java.lang.String CLIPBOARD_SERVICE;
    public static final java.lang.String INPUT_METHOD_SERVICE;
    public static final java.lang.String TEXT_SERVICES_MANAGER_SERVICE;
    public static final java.lang.String DROPBOX_SERVICE;
    public static final java.lang.String DEVICE_POLICY_SERVICE;
    public static final java.lang.String UI_MODE_SERVICE;
    public static final java.lang.String DOWNLOAD_SERVICE;
    public static final java.lang.String NFC_SERVICE;
    public static final java.lang.String USB_SERVICE;
    public static final java.lang.String INPUT_SERVICE;
    public static final java.lang.String DISPLAY_SERVICE;
    public static final java.lang.String USER_SERVICE;
    public static final int CONTEXT_INCLUDE_CODE;
    public static final int CONTEXT_IGNORE_SECURITY;
    public static final int CONTEXT_RESTRICTED;

    public void <init>()
    {
        android.content.Context r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract android.content.res.AssetManager getAssets();

    public abstract android.content.res.Resources getResources();

    public abstract android.content.pm.PackageManager getPackageManager();

    public abstract android.content.ContentResolver getContentResolver();

    public abstract android.os.Looper getMainLooper();

    public abstract android.content.Context getApplicationContext();

    public void registerComponentCallbacks(android.content.ComponentCallbacks)
    {
        android.content.Context r0;
        android.content.ComponentCallbacks r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.content.ComponentCallbacks;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void unregisterComponentCallbacks(android.content.ComponentCallbacks)
    {
        android.content.Context r0;
        android.content.ComponentCallbacks r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.content.ComponentCallbacks;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final java.lang.CharSequence getText(int)
    {
        android.content.Context r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.content.Context;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final java.lang.String getString(int)
    {
        android.content.Context r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.content.Context;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public final transient java.lang.String getString(int, java.lang.Object[])
    {
        android.content.Context r0;
        int i0;
        java.lang.Object[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.content.Context;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public abstract void setTheme(int);

    public abstract android.content.res.Resources$Theme getTheme();

    public final android.content.res.TypedArray obtainStyledAttributes(int[])
    {
        android.content.Context r0;
        int[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.content.Context;

        r1 := @parameter0: int[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final android.content.res.TypedArray obtainStyledAttributes(int, int[]) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context r0;
        int i0;
        int[] r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.content.Context;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public final android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet, int[])
    {
        android.content.Context r0;
        android.util.AttributeSet r1;
        int[] r2;
        java.lang.RuntimeException $r3;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.util.AttributeSet;

        r2 := @parameter1: int[];

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public final android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet, int[], int, int)
    {
        android.content.Context r0;
        android.util.AttributeSet r1;
        int[] r2;
        int i0, i1;
        java.lang.RuntimeException $r3;

        r0 := @this: android.content.Context;

        r1 := @parameter0: android.util.AttributeSet;

        r2 := @parameter1: int[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public abstract java.lang.ClassLoader getClassLoader();

    public abstract java.lang.String getPackageName();

    public abstract android.content.pm.ApplicationInfo getApplicationInfo();

    public abstract java.lang.String getPackageResourcePath();

    public abstract java.lang.String getPackageCodePath();

    public abstract android.content.SharedPreferences getSharedPreferences(java.lang.String, int);

    public abstract java.io.FileInputStream openFileInput(java.lang.String) throws java.io.FileNotFoundException;

    public abstract java.io.FileOutputStream openFileOutput(java.lang.String, int) throws java.io.FileNotFoundException;

    public abstract boolean deleteFile(java.lang.String);

    public abstract java.io.File getFileStreamPath(java.lang.String);

    public abstract java.io.File getFilesDir();

    public abstract java.io.File getExternalFilesDir(java.lang.String);

    public abstract java.io.File getObbDir();

    public abstract java.io.File getCacheDir();

    public abstract java.io.File getExternalCacheDir();

    public abstract java.lang.String[] fileList();

    public abstract java.io.File getDir(java.lang.String, int);

    public abstract android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase$CursorFactory);

    public abstract android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase$CursorFactory, android.database.DatabaseErrorHandler);

    public abstract boolean deleteDatabase(java.lang.String);

    public abstract java.io.File getDatabasePath(java.lang.String);

    public abstract java.lang.String[] databaseList();

    public abstract android.graphics.drawable.Drawable getWallpaper();

    public abstract android.graphics.drawable.Drawable peekWallpaper();

    public abstract int getWallpaperDesiredMinimumWidth();

    public abstract int getWallpaperDesiredMinimumHeight();

    public abstract void setWallpaper(android.graphics.Bitmap) throws java.io.IOException;

    public abstract void setWallpaper(java.io.InputStream) throws java.io.IOException;

    public abstract void clearWallpaper() throws java.io.IOException;

    public abstract void startActivity(android.content.Intent);

    public abstract void startActivity(android.content.Intent, android.os.Bundle);

    public abstract void startActivities(android.content.Intent[]);

    public abstract void startActivities(android.content.Intent[], android.os.Bundle);

    public abstract void startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int) throws android.content.IntentSender$SendIntentException;

    public abstract void startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int, android.os.Bundle) throws android.content.IntentSender$SendIntentException;

    public abstract void sendBroadcast(android.content.Intent);

    public abstract void sendBroadcast(android.content.Intent, java.lang.String);

    public abstract void sendOrderedBroadcast(android.content.Intent, java.lang.String);

    public abstract void sendOrderedBroadcast(android.content.Intent, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle);

    public abstract void sendBroadcastAsUser(android.content.Intent, android.os.UserHandle);

    public abstract void sendBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String);

    public abstract void sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle);

    public abstract void sendStickyBroadcast(android.content.Intent);

    public abstract void sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle);

    public abstract void removeStickyBroadcast(android.content.Intent);

    public abstract void sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle);

    public abstract void sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle);

    public abstract void removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle);

    public abstract android.content.Intent registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter);

    public abstract android.content.Intent registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter, java.lang.String, android.os.Handler);

    public abstract void unregisterReceiver(android.content.BroadcastReceiver);

    public abstract android.content.ComponentName startService(android.content.Intent);

    public abstract boolean stopService(android.content.Intent);

    public abstract boolean bindService(android.content.Intent, android.content.ServiceConnection, int);

    public abstract void unbindService(android.content.ServiceConnection);

    public abstract boolean startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle);

    public abstract java.lang.Object getSystemService(java.lang.String);

    public abstract int checkPermission(java.lang.String, int, int);

    public abstract int checkCallingPermission(java.lang.String);

    public abstract int checkCallingOrSelfPermission(java.lang.String);

    public abstract void enforcePermission(java.lang.String, int, int, java.lang.String);

    public abstract void enforceCallingPermission(java.lang.String, java.lang.String);

    public abstract void enforceCallingOrSelfPermission(java.lang.String, java.lang.String);

    public abstract void grantUriPermission(java.lang.String, android.net.Uri, int);

    public abstract void revokeUriPermission(android.net.Uri, int);

    public abstract int checkUriPermission(android.net.Uri, int, int, int);

    public abstract int checkCallingUriPermission(android.net.Uri, int);

    public abstract int checkCallingOrSelfUriPermission(android.net.Uri, int);

    public abstract int checkUriPermission(android.net.Uri, java.lang.String, java.lang.String, int, int, int);

    public abstract void enforceUriPermission(android.net.Uri, int, int, int, java.lang.String);

    public abstract void enforceCallingUriPermission(android.net.Uri, int, java.lang.String);

    public abstract void enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String);

    public abstract void enforceUriPermission(android.net.Uri, java.lang.String, java.lang.String, int, int, int, java.lang.String);

    public abstract android.content.Context createPackageContext(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.Context createConfigurationContext(android.content.res.Configuration);

    public abstract android.content.Context createDisplayContext(android.view.Display);

    public boolean isRestricted()
    {
        android.content.Context r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.content.Context;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public static void <clinit>()
    {
        <android.content.Context: int CONTEXT_RESTRICTED> = 4;

        <android.content.Context: int CONTEXT_IGNORE_SECURITY> = 2;

        <android.content.Context: int CONTEXT_INCLUDE_CODE> = 1;

        <android.content.Context: java.lang.String USER_SERVICE> = "user";

        <android.content.Context: java.lang.String DISPLAY_SERVICE> = "display";

        <android.content.Context: java.lang.String INPUT_SERVICE> = "input";

        <android.content.Context: java.lang.String USB_SERVICE> = "usb";

        <android.content.Context: java.lang.String NFC_SERVICE> = "nfc";

        <android.content.Context: java.lang.String DOWNLOAD_SERVICE> = "download";

        <android.content.Context: java.lang.String UI_MODE_SERVICE> = "uimode";

        <android.content.Context: java.lang.String DEVICE_POLICY_SERVICE> = "device_policy";

        <android.content.Context: java.lang.String DROPBOX_SERVICE> = "dropbox";

        <android.content.Context: java.lang.String TEXT_SERVICES_MANAGER_SERVICE> = "textservices";

        <android.content.Context: java.lang.String INPUT_METHOD_SERVICE> = "input_method";

        <android.content.Context: java.lang.String CLIPBOARD_SERVICE> = "clipboard";

        <android.content.Context: java.lang.String TELEPHONY_SERVICE> = "phone";

        <android.content.Context: java.lang.String MEDIA_ROUTER_SERVICE> = "media_router";

        <android.content.Context: java.lang.String AUDIO_SERVICE> = "audio";

        <android.content.Context: java.lang.String NSD_SERVICE> = "servicediscovery";

        <android.content.Context: java.lang.String WIFI_P2P_SERVICE> = "wifip2p";

        <android.content.Context: java.lang.String WIFI_SERVICE> = "wifi";

        <android.content.Context: java.lang.String CONNECTIVITY_SERVICE> = "connectivity";

        <android.content.Context: java.lang.String VIBRATOR_SERVICE> = "vibrator";

        <android.content.Context: java.lang.String WALLPAPER_SERVICE> = "wallpaper";

        <android.content.Context: java.lang.String STORAGE_SERVICE> = "storage";

        <android.content.Context: java.lang.String SENSOR_SERVICE> = "sensor";

        <android.content.Context: java.lang.String SEARCH_SERVICE> = "search";

        <android.content.Context: java.lang.String LOCATION_SERVICE> = "location";

        <android.content.Context: java.lang.String KEYGUARD_SERVICE> = "keyguard";

        <android.content.Context: java.lang.String ACCESSIBILITY_SERVICE> = "accessibility";

        <android.content.Context: java.lang.String NOTIFICATION_SERVICE> = "notification";

        <android.content.Context: java.lang.String ALARM_SERVICE> = "alarm";

        <android.content.Context: java.lang.String ACTIVITY_SERVICE> = "activity";

        <android.content.Context: java.lang.String ACCOUNT_SERVICE> = "account";

        <android.content.Context: java.lang.String LAYOUT_INFLATER_SERVICE> = "layout_inflater";

        <android.content.Context: java.lang.String WINDOW_SERVICE> = "window";

        <android.content.Context: java.lang.String POWER_SERVICE> = "power";

        <android.content.Context: int BIND_ADJUST_WITH_ACTIVITY> = 128;

        <android.content.Context: int BIND_IMPORTANT> = 64;

        <android.content.Context: int BIND_WAIVE_PRIORITY> = 32;

        <android.content.Context: int BIND_ALLOW_OOM_MANAGEMENT> = 16;

        <android.content.Context: int BIND_ABOVE_CLIENT> = 8;

        <android.content.Context: int BIND_NOT_FOREGROUND> = 4;

        <android.content.Context: int BIND_DEBUG_UNBIND> = 2;

        <android.content.Context: int BIND_AUTO_CREATE> = 1;

        <android.content.Context: int MODE_ENABLE_WRITE_AHEAD_LOGGING> = 8;

        <android.content.Context: int MODE_MULTI_PROCESS> = 4;

        <android.content.Context: int MODE_APPEND> = 32768;

        <android.content.Context: int MODE_WORLD_WRITEABLE> = 2;

        <android.content.Context: int MODE_WORLD_READABLE> = 1;

        <android.content.Context: int MODE_PRIVATE> = 0;

        return;
    }
}
