public abstract class android.content.pm.PackageManager extends java.lang.Object
{
    public static final int GET_ACTIVITIES;
    public static final int GET_RECEIVERS;
    public static final int GET_SERVICES;
    public static final int GET_PROVIDERS;
    public static final int GET_INSTRUMENTATION;
    public static final int GET_INTENT_FILTERS;
    public static final int GET_SIGNATURES;
    public static final int GET_RESOLVED_FILTER;
    public static final int GET_META_DATA;
    public static final int GET_GIDS;
    public static final int GET_DISABLED_COMPONENTS;
    public static final int GET_SHARED_LIBRARY_FILES;
    public static final int GET_URI_PERMISSION_PATTERNS;
    public static final int GET_PERMISSIONS;
    public static final int GET_UNINSTALLED_PACKAGES;
    public static final int GET_CONFIGURATIONS;
    public static final int MATCH_DEFAULT_ONLY;
    public static final int PERMISSION_GRANTED;
    public static final int PERMISSION_DENIED;
    public static final int SIGNATURE_MATCH;
    public static final int SIGNATURE_NEITHER_SIGNED;
    public static final int SIGNATURE_FIRST_NOT_SIGNED;
    public static final int SIGNATURE_SECOND_NOT_SIGNED;
    public static final int SIGNATURE_NO_MATCH;
    public static final int SIGNATURE_UNKNOWN_PACKAGE;
    public static final int COMPONENT_ENABLED_STATE_DEFAULT;
    public static final int COMPONENT_ENABLED_STATE_ENABLED;
    public static final int COMPONENT_ENABLED_STATE_DISABLED;
    public static final int COMPONENT_ENABLED_STATE_DISABLED_USER;
    public static final int DONT_KILL_APP;
    public static final int VERIFICATION_ALLOW;
    public static final int VERIFICATION_REJECT;
    public static final long MAXIMUM_VERIFICATION_TIMEOUT;
    public static final java.lang.String FEATURE_AUDIO_LOW_LATENCY;
    public static final java.lang.String FEATURE_BLUETOOTH;
    public static final java.lang.String FEATURE_CAMERA;
    public static final java.lang.String FEATURE_CAMERA_AUTOFOCUS;
    public static final java.lang.String FEATURE_CAMERA_ANY;
    public static final java.lang.String FEATURE_CAMERA_FLASH;
    public static final java.lang.String FEATURE_CAMERA_FRONT;
    public static final java.lang.String FEATURE_LOCATION;
    public static final java.lang.String FEATURE_LOCATION_GPS;
    public static final java.lang.String FEATURE_LOCATION_NETWORK;
    public static final java.lang.String FEATURE_MICROPHONE;
    public static final java.lang.String FEATURE_NFC;
    public static final java.lang.String FEATURE_SENSOR_ACCELEROMETER;
    public static final java.lang.String FEATURE_SENSOR_BAROMETER;
    public static final java.lang.String FEATURE_SENSOR_COMPASS;
    public static final java.lang.String FEATURE_SENSOR_GYROSCOPE;
    public static final java.lang.String FEATURE_SENSOR_LIGHT;
    public static final java.lang.String FEATURE_SENSOR_PROXIMITY;
    public static final java.lang.String FEATURE_TELEPHONY;
    public static final java.lang.String FEATURE_TELEPHONY_CDMA;
    public static final java.lang.String FEATURE_TELEPHONY_GSM;
    public static final java.lang.String FEATURE_USB_HOST;
    public static final java.lang.String FEATURE_USB_ACCESSORY;
    public static final java.lang.String FEATURE_SIP;
    public static final java.lang.String FEATURE_SIP_VOIP;
    public static final java.lang.String FEATURE_TOUCHSCREEN;
    public static final java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH;
    public static final java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH_DISTINCT;
    public static final java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH_JAZZHAND;
    public static final java.lang.String FEATURE_FAKETOUCH;
    public static final java.lang.String FEATURE_FAKETOUCH_MULTITOUCH_DISTINCT;
    public static final java.lang.String FEATURE_FAKETOUCH_MULTITOUCH_JAZZHAND;
    public static final java.lang.String FEATURE_SCREEN_PORTRAIT;
    public static final java.lang.String FEATURE_SCREEN_LANDSCAPE;
    public static final java.lang.String FEATURE_LIVE_WALLPAPER;
    public static final java.lang.String FEATURE_WIFI;
    public static final java.lang.String FEATURE_WIFI_DIRECT;
    public static final java.lang.String FEATURE_TELEVISION;
    public static final java.lang.String EXTRA_VERIFICATION_ID;
    public static final java.lang.String EXTRA_VERIFICATION_RESULT;

    public void <init>()
    {
        android.content.pm.PackageManager r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.content.pm.PackageManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public abstract android.content.pm.PackageInfo getPackageInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract java.lang.String[] currentToCanonicalPackageNames(java.lang.String[]);

    public abstract java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[]);

    public abstract android.content.Intent getLaunchIntentForPackage(java.lang.String);

    public abstract int[] getPackageGids(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.PermissionInfo getPermissionInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract java.util.List queryPermissionsByGroup(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract java.util.List getAllPermissionGroups(int);

    public abstract android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract java.util.List getInstalledPackages(int);

    public abstract int checkPermission(java.lang.String, java.lang.String);

    public abstract boolean addPermission(android.content.pm.PermissionInfo);

    public abstract boolean addPermissionAsync(android.content.pm.PermissionInfo);

    public abstract void removePermission(java.lang.String);

    public abstract int checkSignatures(java.lang.String, java.lang.String);

    public abstract int checkSignatures(int, int);

    public abstract java.lang.String[] getPackagesForUid(int);

    public abstract java.lang.String getNameForUid(int);

    public abstract java.util.List getInstalledApplications(int);

    public abstract java.lang.String[] getSystemSharedLibraryNames();

    public abstract android.content.pm.FeatureInfo[] getSystemAvailableFeatures();

    public abstract boolean hasSystemFeature(java.lang.String);

    public abstract android.content.pm.ResolveInfo resolveActivity(android.content.Intent, int);

    public abstract java.util.List queryIntentActivities(android.content.Intent, int);

    public abstract java.util.List queryIntentActivityOptions(android.content.ComponentName, android.content.Intent[], android.content.Intent, int);

    public abstract java.util.List queryBroadcastReceivers(android.content.Intent, int);

    public abstract android.content.pm.ResolveInfo resolveService(android.content.Intent, int);

    public abstract java.util.List queryIntentServices(android.content.Intent, int);

    public abstract android.content.pm.ProviderInfo resolveContentProvider(java.lang.String, int);

    public abstract java.util.List queryContentProviders(java.lang.String, int, int);

    public abstract android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract java.util.List queryInstrumentation(java.lang.String, int);

    public abstract android.graphics.drawable.Drawable getDrawable(java.lang.String, int, android.content.pm.ApplicationInfo);

    public abstract android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.graphics.drawable.Drawable getActivityIcon(android.content.Intent) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.graphics.drawable.Drawable getDefaultActivityIcon();

    public abstract android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo);

    public abstract android.graphics.drawable.Drawable getApplicationIcon(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.graphics.drawable.Drawable getActivityLogo(android.content.Intent) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo);

    public abstract android.graphics.drawable.Drawable getApplicationLogo(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract java.lang.CharSequence getText(java.lang.String, int, android.content.pm.ApplicationInfo);

    public abstract android.content.res.XmlResourceParser getXml(java.lang.String, int, android.content.pm.ApplicationInfo);

    public abstract java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo);

    public abstract android.content.res.Resources getResourcesForActivity(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.res.Resources getResourcesForApplication(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;

    public android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String, int)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1;
        int i0;
        java.lang.RuntimeException $r2;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public abstract void verifyPendingInstall(int, int);

    public abstract void extendVerificationTimeout(int, int, long);

    public abstract void setInstallerPackageName(java.lang.String, java.lang.String);

    public abstract java.lang.String getInstallerPackageName(java.lang.String);

    public abstract void addPackageToPreferred(java.lang.String);

    public abstract void removePackageFromPreferred(java.lang.String);

    public abstract java.util.List getPreferredPackages(int);

    public abstract void addPreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName);

    public abstract void clearPackagePreferredActivities(java.lang.String);

    public abstract int getPreferredActivities(java.util.List, java.util.List, java.lang.String);

    public abstract void setComponentEnabledSetting(android.content.ComponentName, int, int);

    public abstract int getComponentEnabledSetting(android.content.ComponentName);

    public abstract void setApplicationEnabledSetting(java.lang.String, int, int);

    public abstract int getApplicationEnabledSetting(java.lang.String);

    public abstract boolean isSafeMode();

    public static void <clinit>()
    {
        <android.content.pm.PackageManager: java.lang.String EXTRA_VERIFICATION_RESULT> = "android.content.pm.extra.VERIFICATION_RESULT";

        <android.content.pm.PackageManager: java.lang.String EXTRA_VERIFICATION_ID> = "android.content.pm.extra.VERIFICATION_ID";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TELEVISION> = "android.hardware.type.television";

        <android.content.pm.PackageManager: java.lang.String FEATURE_WIFI_DIRECT> = "android.hardware.wifi.direct";

        <android.content.pm.PackageManager: java.lang.String FEATURE_WIFI> = "android.hardware.wifi";

        <android.content.pm.PackageManager: java.lang.String FEATURE_LIVE_WALLPAPER> = "android.software.live_wallpaper";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SCREEN_LANDSCAPE> = "android.hardware.screen.landscape";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SCREEN_PORTRAIT> = "android.hardware.screen.portrait";

        <android.content.pm.PackageManager: java.lang.String FEATURE_FAKETOUCH_MULTITOUCH_JAZZHAND> = "android.hardware.faketouch.multitouch.jazzhand";

        <android.content.pm.PackageManager: java.lang.String FEATURE_FAKETOUCH_MULTITOUCH_DISTINCT> = "android.hardware.faketouch.multitouch.distinct";

        <android.content.pm.PackageManager: java.lang.String FEATURE_FAKETOUCH> = "android.hardware.faketouch";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH_JAZZHAND> = "android.hardware.touchscreen.multitouch.jazzhand";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH_DISTINCT> = "android.hardware.touchscreen.multitouch.distinct";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH> = "android.hardware.touchscreen.multitouch";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TOUCHSCREEN> = "android.hardware.touchscreen";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SIP_VOIP> = "android.software.sip.voip";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SIP> = "android.software.sip";

        <android.content.pm.PackageManager: java.lang.String FEATURE_USB_ACCESSORY> = "android.hardware.usb.accessory";

        <android.content.pm.PackageManager: java.lang.String FEATURE_USB_HOST> = "android.hardware.usb.host";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TELEPHONY_GSM> = "android.hardware.telephony.gsm";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TELEPHONY_CDMA> = "android.hardware.telephony.cdma";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TELEPHONY> = "android.hardware.telephony";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_PROXIMITY> = "android.hardware.sensor.proximity";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_LIGHT> = "android.hardware.sensor.light";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_GYROSCOPE> = "android.hardware.sensor.gyroscope";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_COMPASS> = "android.hardware.sensor.compass";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_BAROMETER> = "android.hardware.sensor.barometer";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_ACCELEROMETER> = "android.hardware.sensor.accelerometer";

        <android.content.pm.PackageManager: java.lang.String FEATURE_NFC> = "android.hardware.nfc";

        <android.content.pm.PackageManager: java.lang.String FEATURE_MICROPHONE> = "android.hardware.microphone";

        <android.content.pm.PackageManager: java.lang.String FEATURE_LOCATION_NETWORK> = "android.hardware.location.network";

        <android.content.pm.PackageManager: java.lang.String FEATURE_LOCATION_GPS> = "android.hardware.location.gps";

        <android.content.pm.PackageManager: java.lang.String FEATURE_LOCATION> = "android.hardware.location";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CAMERA_FRONT> = "android.hardware.camera.front";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CAMERA_FLASH> = "android.hardware.camera.flash";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CAMERA_ANY> = "android.hardware.camera.any";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CAMERA_AUTOFOCUS> = "android.hardware.camera.autofocus";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CAMERA> = "android.hardware.camera";

        <android.content.pm.PackageManager: java.lang.String FEATURE_BLUETOOTH> = "android.hardware.bluetooth";

        <android.content.pm.PackageManager: java.lang.String FEATURE_AUDIO_LOW_LATENCY> = "android.hardware.audio.low_latency";

        <android.content.pm.PackageManager: long MAXIMUM_VERIFICATION_TIMEOUT> = 3600000L;

        <android.content.pm.PackageManager: int VERIFICATION_REJECT> = -1;

        <android.content.pm.PackageManager: int VERIFICATION_ALLOW> = 1;

        <android.content.pm.PackageManager: int DONT_KILL_APP> = 1;

        <android.content.pm.PackageManager: int COMPONENT_ENABLED_STATE_DISABLED_USER> = 3;

        <android.content.pm.PackageManager: int COMPONENT_ENABLED_STATE_DISABLED> = 2;

        <android.content.pm.PackageManager: int COMPONENT_ENABLED_STATE_ENABLED> = 1;

        <android.content.pm.PackageManager: int COMPONENT_ENABLED_STATE_DEFAULT> = 0;

        <android.content.pm.PackageManager: int SIGNATURE_UNKNOWN_PACKAGE> = -4;

        <android.content.pm.PackageManager: int SIGNATURE_NO_MATCH> = -3;

        <android.content.pm.PackageManager: int SIGNATURE_SECOND_NOT_SIGNED> = -2;

        <android.content.pm.PackageManager: int SIGNATURE_FIRST_NOT_SIGNED> = -1;

        <android.content.pm.PackageManager: int SIGNATURE_NEITHER_SIGNED> = 1;

        <android.content.pm.PackageManager: int SIGNATURE_MATCH> = 0;

        <android.content.pm.PackageManager: int PERMISSION_DENIED> = -1;

        <android.content.pm.PackageManager: int PERMISSION_GRANTED> = 0;

        <android.content.pm.PackageManager: int MATCH_DEFAULT_ONLY> = 65536;

        <android.content.pm.PackageManager: int GET_CONFIGURATIONS> = 16384;

        <android.content.pm.PackageManager: int GET_UNINSTALLED_PACKAGES> = 8192;

        <android.content.pm.PackageManager: int GET_PERMISSIONS> = 4096;

        <android.content.pm.PackageManager: int GET_URI_PERMISSION_PATTERNS> = 2048;

        <android.content.pm.PackageManager: int GET_SHARED_LIBRARY_FILES> = 1024;

        <android.content.pm.PackageManager: int GET_DISABLED_COMPONENTS> = 512;

        <android.content.pm.PackageManager: int GET_GIDS> = 256;

        <android.content.pm.PackageManager: int GET_META_DATA> = 128;

        <android.content.pm.PackageManager: int GET_RESOLVED_FILTER> = 64;

        <android.content.pm.PackageManager: int GET_SIGNATURES> = 64;

        <android.content.pm.PackageManager: int GET_INTENT_FILTERS> = 32;

        <android.content.pm.PackageManager: int GET_INSTRUMENTATION> = 16;

        <android.content.pm.PackageManager: int GET_PROVIDERS> = 8;

        <android.content.pm.PackageManager: int GET_SERVICES> = 4;

        <android.content.pm.PackageManager: int GET_RECEIVERS> = 2;

        <android.content.pm.PackageManager: int GET_ACTIVITIES> = 1;

        return;
    }
}
