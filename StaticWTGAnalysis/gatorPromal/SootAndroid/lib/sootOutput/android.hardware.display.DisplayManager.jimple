public final class android.hardware.display.DisplayManager extends java.lang.Object
{
    public static final java.lang.String DISPLAY_CATEGORY_PRESENTATION;

    void <init>()
    {
        android.hardware.display.DisplayManager r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.hardware.display.DisplayManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public android.view.Display getDisplay(int)
    {
        android.hardware.display.DisplayManager r0;
        int i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.hardware.display.DisplayManager;

        i0 := @parameter0: int;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public android.view.Display[] getDisplays()
    {
        android.hardware.display.DisplayManager r0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.hardware.display.DisplayManager;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r1;
    }

    public android.view.Display[] getDisplays(java.lang.String)
    {
        android.hardware.display.DisplayManager r0;
        java.lang.String r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public void registerDisplayListener(android.hardware.display.DisplayManager$DisplayListener, android.os.Handler)
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.DisplayManager$DisplayListener r1;
        android.os.Handler r2;
        java.lang.RuntimeException $r3;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: android.hardware.display.DisplayManager$DisplayListener;

        r2 := @parameter1: android.os.Handler;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r3;
    }

    public void unregisterDisplayListener(android.hardware.display.DisplayManager$DisplayListener)
    {
        android.hardware.display.DisplayManager r0;
        android.hardware.display.DisplayManager$DisplayListener r1;
        java.lang.RuntimeException $r2;

        r0 := @this: android.hardware.display.DisplayManager;

        r1 := @parameter0: android.hardware.display.DisplayManager$DisplayListener;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!");

        throw $r2;
    }

    public static void <clinit>()
    {
        <android.hardware.display.DisplayManager: java.lang.String DISPLAY_CATEGORY_PRESENTATION> = "android.hardware.display.category.PRESENTATION";

        return;
    }
}
