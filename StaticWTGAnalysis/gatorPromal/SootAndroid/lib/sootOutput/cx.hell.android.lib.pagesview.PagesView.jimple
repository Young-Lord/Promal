public class cx.hell.android.lib.pagesview.PagesView extends android.view.View implements android.view.View$OnTouchListener, cx.hell.android.lib.pagesview.OnImageRenderedListener, android.view.View$OnKeyListener
{
    private static final int MAX_TILE_PIXELS;
    private static final int MAX_TILE_WIDTH;
    private static final int MIN_TILE_HEIGHT;
    private static final int MIN_TILE_WIDTH;
    private static final java.lang.String TAG;
    private cx.hell.android.pdfview.Actions actions;
    private android.app.Activity activity;
    private cx.hell.android.pdfview.BookmarkEntry bookmarkToRestore;
    private int colorMode;
    private int currentPage;
    private int doubleTapAction;
    private float downX;
    private float downY;
    private boolean eink;
    private boolean findMode;
    private java.util.List findResults;
    private android.graphics.Paint findResultsPaint1;
    private android.graphics.Paint findResultsPaint2;
    private android.view.GestureDetector gestureDetector;
    private int height;
    private long lastControlsUseMillis;
    private float lastX;
    private float lastY;
    private int left;
    private int leftToRestore;
    private boolean lockedVertically;
    private int marginX;
    private int marginY;
    private float maxExcursionY;
    private float[] maxRealPageSize;
    private long mtDebounce;
    private float mtDistanceStart;
    private float mtLastDistance;
    private boolean mtZoomActive;
    private float mtZoomValue;
    private boolean nook2;
    private int[][] pageSizes;
    boolean pageWithVolume;
    private cx.hell.android.lib.pagesview.PagesProvider pagesProvider;
    int prevLeft;
    int prevTop;
    private float[] realDocumentSize;
    private int rotation;
    private float scaling0;
    private android.widget.Scroller scroller;
    private boolean showZoomOnScroll;
    float step;
    private int top;
    private boolean verticalScrollLock;
    private boolean volumeDownIsDown;
    private boolean volumeUpIsDown;
    private int width;
    private android.widget.LinearLayout zoomLayout;
    private int zoomLevel;
    private int zoomToRestore;

    public void <init>(android.app.Activity)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        android.app.Activity $r1;
        long $l0;
        float[] $r2;
        android.graphics.Paint $r3;
        android.graphics.Paint$Style $r4;
        android.view.GestureDetector $r5;
        cx.hell.android.lib.pagesview.PagesView$1 $r6;
        cx.hell.android.pdfview.OpenFileActivity $r7;
        cx.hell.android.lib.pagesview.PagesView$2 $r8;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $r1 := @parameter0: android.app.Activity;

        specialinvoke $r0.<android.view.View: void <init>(android.content.Context)>($r1);

        $r0.<cx.hell.android.lib.pagesview.PagesView: int marginX> = 0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int marginY> = 10;

        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean mtZoomActive> = 0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: float step> = 1.414F;

        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean pageWithVolume> = 1;

        $r0.<cx.hell.android.lib.pagesview.PagesView: android.app.Activity activity> = null;

        $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.lib.pagesview.PagesProvider pagesProvider> = null;

        $r0.<cx.hell.android.lib.pagesview.PagesView: long lastControlsUseMillis> = 0L;

        $r2 = newarray (float)[2];

        $r2[0] = 0.0F;

        $r2[1] = 0.0F;

        $r0.<cx.hell.android.lib.pagesview.PagesView: float[] maxRealPageSize> = $r2;

        $r2 = newarray (float)[2];

        $r2[0] = 0.0F;

        $r2[1] = 0.0F;

        $r0.<cx.hell.android.lib.pagesview.PagesView: float[] realDocumentSize> = $r2;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int width> = 0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int height> = 0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int left> = 0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int top> = 0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomLevel> = 1000;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int rotation> = 0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: float scaling0> = 0.0F;

        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean findMode> = 0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: android.graphics.Paint findResultsPaint1> = null;

        $r0.<cx.hell.android.lib.pagesview.PagesView: android.graphics.Paint findResultsPaint2> = null;

        $r0.<cx.hell.android.lib.pagesview.PagesView: java.util.List findResults> = null;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int currentPage> = 0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.pdfview.BookmarkEntry bookmarkToRestore> = null;

        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean eink> = 0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean showZoomOnScroll> = 0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean volumeUpIsDown> = 0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean volumeDownIsDown> = 0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: android.view.GestureDetector gestureDetector> = null;

        $r0.<cx.hell.android.lib.pagesview.PagesView: android.widget.Scroller scroller> = null;

        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean verticalScrollLock> = 1;

        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean lockedVertically> = 0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: float downX> = 0.0F;

        $r0.<cx.hell.android.lib.pagesview.PagesView: float downY> = 0.0F;

        $r0.<cx.hell.android.lib.pagesview.PagesView: float lastX> = 0.0F;

        $r0.<cx.hell.android.lib.pagesview.PagesView: float lastY> = 0.0F;

        $r0.<cx.hell.android.lib.pagesview.PagesView: float maxExcursionY> = 0.0F;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int doubleTapAction> = 2;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomToRestore> = 0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.pdfview.Actions actions> = null;

        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean nook2> = 0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: android.widget.LinearLayout zoomLayout> = null;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int prevTop> = -1;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int prevLeft> = -1;

        $r0.<cx.hell.android.lib.pagesview.PagesView: android.app.Activity activity> = $r1;

        $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.pdfview.Actions actions> = null;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0.<cx.hell.android.lib.pagesview.PagesView: long lastControlsUseMillis> = $l0;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        $r0.<cx.hell.android.lib.pagesview.PagesView: android.graphics.Paint findResultsPaint1> = $r3;

        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: android.graphics.Paint findResultsPaint1>;

        virtualinvoke $r3.<android.graphics.Paint: void setARGB(int,int,int,int)>(128, 128, 128, 128);

        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: android.graphics.Paint findResultsPaint1>;

        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r4);

        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: android.graphics.Paint findResultsPaint1>;

        virtualinvoke $r3.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: android.graphics.Paint findResultsPaint1>;

        virtualinvoke $r3.<android.graphics.Paint: void setStrokeWidth(float)>(3.0F);

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        $r0.<cx.hell.android.lib.pagesview.PagesView: android.graphics.Paint findResultsPaint2> = $r3;

        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: android.graphics.Paint findResultsPaint2>;

        virtualinvoke $r3.<android.graphics.Paint: void setARGB(int,int,int,int)>(208, 197, 0, 0);

        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: android.graphics.Paint findResultsPaint2>;

        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r4);

        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: android.graphics.Paint findResultsPaint2>;

        virtualinvoke $r3.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: android.graphics.Paint findResultsPaint2>;

        virtualinvoke $r3.<android.graphics.Paint: void setStrokeWidth(float)>(3.0F);

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void setOnTouchListener(android.view.View$OnTouchListener)>($r0);

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void setOnKeyListener(android.view.View$OnKeyListener)>($r0);

        virtualinvoke $r1.<android.app.Activity: void setDefaultKeyMode(int)>(3);

        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean mtZoomActive> = 0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: long mtDebounce> = 0L;

        $r0.<cx.hell.android.lib.pagesview.PagesView: android.widget.Scroller scroller> = null;

        $r5 = new android.view.GestureDetector;

        $r6 = new cx.hell.android.lib.pagesview.PagesView$1;

        specialinvoke $r6.<cx.hell.android.lib.pagesview.PagesView$1: void <init>(cx.hell.android.lib.pagesview.PagesView)>($r0);

        specialinvoke $r5.<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener)>($r1, $r6);

        $r0.<cx.hell.android.lib.pagesview.PagesView: android.view.GestureDetector gestureDetector> = $r5;

        $r7 = (cx.hell.android.pdfview.OpenFileActivity) $r1;

        $r5 = $r0.<cx.hell.android.lib.pagesview.PagesView: android.view.GestureDetector gestureDetector>;

        $r8 = new cx.hell.android.lib.pagesview.PagesView$2;

        specialinvoke $r8.<cx.hell.android.lib.pagesview.PagesView$2: void <init>(cx.hell.android.lib.pagesview.PagesView,cx.hell.android.pdfview.OpenFileActivity,cx.hell.android.lib.pagesview.PagesView)>($r0, $r7, $r0);

        virtualinvoke $r5.<android.view.GestureDetector: void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)>($r8);

        return;
    }

    static boolean access$0(cx.hell.android.lib.pagesview.PagesView)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        boolean z0;

        $r0 := @parameter0: cx.hell.android.lib.pagesview.PagesView;

        z0 = $r0.<cx.hell.android.lib.pagesview.PagesView: boolean lockedVertically>;

        return z0;
    }

    static void access$1(cx.hell.android.lib.pagesview.PagesView, float, float)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        float $f0, $f1;

        $r0 := @parameter0: cx.hell.android.lib.pagesview.PagesView;

        $f0 := @parameter1: float;

        $f1 := @parameter2: float;

        specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void doFling(float,float)>($f0, $f1);

        return;
    }

    static void access$10(cx.hell.android.lib.pagesview.PagesView, int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0;

        $r0 := @parameter0: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter1: int;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomToRestore> = $i0;

        return;
    }

    static int access$11(cx.hell.android.lib.pagesview.PagesView)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int i0;

        $r0 := @parameter0: cx.hell.android.lib.pagesview.PagesView;

        i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int left>;

        return i0;
    }

    static int access$12(cx.hell.android.lib.pagesview.PagesView)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int i0;

        $r0 := @parameter0: cx.hell.android.lib.pagesview.PagesView;

        i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        return i0;
    }

    static int access$13(cx.hell.android.lib.pagesview.PagesView)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int i0;

        $r0 := @parameter0: cx.hell.android.lib.pagesview.PagesView;

        i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        return i0;
    }

    static void access$14(cx.hell.android.lib.pagesview.PagesView, int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0;

        $r0 := @parameter0: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter1: int;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int leftToRestore> = $i0;

        return;
    }

    static long access$15(cx.hell.android.lib.pagesview.PagesView)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        long l0;

        $r0 := @parameter0: cx.hell.android.lib.pagesview.PagesView;

        l0 = $r0.<cx.hell.android.lib.pagesview.PagesView: long mtDebounce>;

        return l0;
    }

    static boolean access$16(cx.hell.android.lib.pagesview.PagesView)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        boolean z0;

        $r0 := @parameter0: cx.hell.android.lib.pagesview.PagesView;

        z0 = $r0.<cx.hell.android.lib.pagesview.PagesView: boolean showZoomOnScroll>;

        return z0;
    }

    static android.widget.LinearLayout access$17(cx.hell.android.lib.pagesview.PagesView)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        android.widget.LinearLayout r1;

        $r0 := @parameter0: cx.hell.android.lib.pagesview.PagesView;

        r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: android.widget.LinearLayout zoomLayout>;

        return r1;
    }

    static cx.hell.android.pdfview.Actions access$18(cx.hell.android.lib.pagesview.PagesView)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        cx.hell.android.pdfview.Actions r1;

        $r0 := @parameter0: cx.hell.android.lib.pagesview.PagesView;

        r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.pdfview.Actions actions>;

        return r1;
    }

    static int access$2(cx.hell.android.lib.pagesview.PagesView)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int i0;

        $r0 := @parameter0: cx.hell.android.lib.pagesview.PagesView;

        i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int doubleTapAction>;

        return i0;
    }

    static int access$3(cx.hell.android.lib.pagesview.PagesView)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int i0;

        $r0 := @parameter0: cx.hell.android.lib.pagesview.PagesView;

        i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomToRestore>;

        return i0;
    }

    static int access$4(cx.hell.android.lib.pagesview.PagesView)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int i0;

        $r0 := @parameter0: cx.hell.android.lib.pagesview.PagesView;

        i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int leftToRestore>;

        return i0;
    }

    static void access$5(cx.hell.android.lib.pagesview.PagesView, int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0;

        $r0 := @parameter0: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter1: int;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int left> = $i0;

        return;
    }

    static int access$6(cx.hell.android.lib.pagesview.PagesView)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int i0;

        $r0 := @parameter0: cx.hell.android.lib.pagesview.PagesView;

        i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int top>;

        return i0;
    }

    static int access$7(cx.hell.android.lib.pagesview.PagesView)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int i0;

        $r0 := @parameter0: cx.hell.android.lib.pagesview.PagesView;

        i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomLevel>;

        return i0;
    }

    static void access$8(cx.hell.android.lib.pagesview.PagesView, int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0;

        $r0 := @parameter0: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter1: int;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int top> = $i0;

        return;
    }

    static void access$9(cx.hell.android.lib.pagesview.PagesView, int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0;

        $r0 := @parameter0: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter1: int;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomLevel> = $i0;

        return;
    }

    private int adjustPosition(int, int, int, int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0, $i1, $i2, $i3, $i4;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getLowerBound(int,int,int)>($i1, $i2, $i3);

        $i1 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getUpperBound(int,int,int)>($i1, $i2, $i3);

        if $i0 >= $i4 goto label1;

        return $i4;

     label1:
        if $i1 >= $i0 goto label2;

        return $i1;

     label2:
        return $i0;
    }

    private float distance(android.view.MotionEvent)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        android.view.MotionEvent $r1;
        float $f0, $f1, $f2;
        double $d0;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $r1 := @parameter0: android.view.MotionEvent;

        $f0 = staticinvoke <cx.hell.android.pdfview.AndroidReflections: float getMotionEventX(android.view.MotionEvent,int)>($r1, 0);

        $f1 = staticinvoke <cx.hell.android.pdfview.AndroidReflections: float getMotionEventX(android.view.MotionEvent,int)>($r1, 1);

        $f0 = $f0 - $f1;

        $f1 = staticinvoke <cx.hell.android.pdfview.AndroidReflections: float getMotionEventY(android.view.MotionEvent,int)>($r1, 0);

        $f2 = staticinvoke <cx.hell.android.pdfview.AndroidReflections: float getMotionEventY(android.view.MotionEvent,int)>($r1, 1);

        $f1 = $f1 - $f2;

        $f0 = $f0 * $f0;

        $f1 = $f1 * $f1;

        $f0 = $f0 + $f1;

        $d0 = (double) $f0;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f0 = (float) $d0;

        return $f0;
    }

    private void doFling(float, float)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8;
        float $f0, $f1, $f2, $f3;
        byte $b4;
        double $d0, $d1;
        android.widget.Scroller $r1;
        android.app.Activity $r2;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $b4 = $f0 cmpl 0.0F;

        if $b4 <= 0 goto label4;

        $f2 = $f0;

     label1:
        $b4 = $f1 cmpl 0.0F;

        if $b4 <= 0 goto label5;

        $f3 = $f1;

     label2:
        $d0 = (double) $f2;

        $d1 = (double) $f3;

        $d1 = 0.25 * $d1;

        $b4 = $d0 cmpg $d1;

        if $b4 >= 0 goto label6;

        $f0 = 0.0F;

     label3:
        $f2 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float getCurrentMarginX()>();

        $i1 = (int) $f2;

        $f2 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float getCurrentMarginY()>();

        $i3 = (int) $f2;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $i0 = $i0 / 2;

        $i2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $i5 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getCurrentMaxPageWidth()>();

        $i2 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getLowerBound(int,int,int)>($i2, $i1, $i5);

        $i0 = $i0 + $i2;

        $i2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $i2 = $i2 / 2;

        $i5 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $i6 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getCurrentMaxPageWidth()>();

        $i1 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getUpperBound(int,int,int)>($i5, $i1, $i6);

        $i1 = $i2 + $i1;

        $i2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $i2 = $i2 / 2;

        $i5 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $i6 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getCurrentDocumentHeight()>();

        $i5 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getLowerBound(int,int,int)>($i5, $i3, $i6);

        $i2 = $i2 + $i5;

        $i5 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $i5 = $i5 / 2;

        $i6 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $i7 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getCurrentDocumentHeight()>();

        $i3 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getUpperBound(int,int,int)>($i6, $i3, $i7);

        $i3 = $i5 + $i3;

        $r1 = new android.widget.Scroller;

        $r2 = $r0.<cx.hell.android.lib.pagesview.PagesView: android.app.Activity activity>;

        specialinvoke $r1.<android.widget.Scroller: void <init>(android.content.Context)>($r2);

        $r0.<cx.hell.android.lib.pagesview.PagesView: android.widget.Scroller scroller> = $r1;

        $r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: android.widget.Scroller scroller>;

        $i5 = $r0.<cx.hell.android.lib.pagesview.PagesView: int left>;

        $i6 = $r0.<cx.hell.android.lib.pagesview.PagesView: int top>;

        $f0 = neg $f0;

        $i7 = (int) $f0;

        $f0 = neg $f1;

        $i8 = (int) $f0;

        virtualinvoke $r1.<android.widget.Scroller: void fling(int,int,int,int,int,int,int,int)>($i5, $i6, $i7, $i8, $i0, $i1, $i2, $i3);

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void invalidate()>();

        return;

     label4:
        $f2 = neg $f0;

        goto label1;

     label5:
        $f3 = neg $f1;

        goto label2;

     label6:
        $d0 = (double) $f3;

        $d1 = (double) $f2;

        $d1 = 0.25 * $d1;

        $b4 = $d0 cmpg $d1;

        if $b4 >= 0 goto label3;

        $f1 = 0.0F;

        goto label3;
    }

    private void doScroll(int, int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0, $i1, $i2;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int left>;

        $i0 = $i2 + $i0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int left> = $i0;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int top>;

        $i0 = $i0 + $i1;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int top> = $i0;

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void invalidate()>();

        return;
    }

    private void drawBitmap(android.graphics.Canvas, android.graphics.Bitmap, android.graphics.Rect, android.graphics.Rect)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        android.graphics.Canvas $r1;
        android.graphics.Bitmap $r2;
        android.graphics.Rect $r3, $r4;
        android.graphics.Paint $r5;
        android.graphics.ColorMatrix $r6;
        float[] $r7;
        int $i0;
        android.graphics.ColorMatrixColorFilter $r8;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 := @parameter1: android.graphics.Bitmap;

        $r3 := @parameter2: android.graphics.Rect;

        $r4 := @parameter3: android.graphics.Rect;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int colorMode>;

        if $i0 == 0 goto label1;

        $r5 = new android.graphics.Paint;

        specialinvoke $r5.<android.graphics.Paint: void <init>()>();

        $r8 = new android.graphics.ColorMatrixColorFilter;

        $r6 = new android.graphics.ColorMatrix;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int colorMode>;

        $r7 = staticinvoke <cx.hell.android.pdfview.Options: float[] getColorModeMatrix(int)>($i0);

        specialinvoke $r6.<android.graphics.ColorMatrix: void <init>(float[])>($r7);

        specialinvoke $r8.<android.graphics.ColorMatrixColorFilter: void <init>(android.graphics.ColorMatrix)>($r6);

        virtualinvoke $r5.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r8);

        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>($r2, $r3, $r4, $r5);

        return;

     label1:
        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>($r2, $r3, $r4, null);

        return;
    }

    private void drawFindResults(android.graphics.Canvas)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        android.graphics.Canvas $r1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        boolean $z0;
        java.lang.RuntimeException $r2;
        java.util.List $r3;
        java.util.Iterator $r4, $r7;
        java.lang.Object $r5;
        cx.hell.android.lib.pagesview.FindResult $r6;
        int $i0;
        android.graphics.Point $r8;
        android.graphics.Rect $r9;
        android.graphics.Paint $r10;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $r1 := @parameter0: android.graphics.Canvas;

        $z0 = $r0.<cx.hell.android.lib.pagesview.PagesView: boolean findMode>;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("drawFindResults but not in find results mode");

        throw $r2;

     label1:
        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: java.util.List findResults>;

        if $r3 == null goto label2;

        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: java.util.List findResults>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label3;

     label2:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("cx.hell.android.pdfview", "nothing found");

        return;

     label3:
        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: java.util.List findResults>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (cx.hell.android.lib.pagesview.FindResult) $r5;

        $r3 = $r6.<cx.hell.android.lib.pagesview.FindResult: java.util.List markers>;

        if $r3 == null goto label5;

        $r3 = $r6.<cx.hell.android.lib.pagesview.FindResult: java.util.List markers>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label6;

     label5:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("illegal FindResult: find result must have at least one marker");

        throw $r2;

     label6:
        $r3 = $r6.<cx.hell.android.lib.pagesview.FindResult: java.util.List markers>;

        $r7 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        $i0 = $r6.<cx.hell.android.lib.pagesview.FindResult: int page>;

        $r8 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: android.graphics.Point getPagePositionOnScreen(int)>($i0);

        $i0 = $r8.<android.graphics.Point: int x>;

        $f0 = (float) $i0;

        $i0 = $r8.<android.graphics.Point: int y>;

        $f1 = (float) $i0;

        $f2 = $r0.<cx.hell.android.lib.pagesview.PagesView: float scaling0>;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomLevel>;

        $f3 = (float) $i0;

        $f2 = $f2 * $f3;

        $f2 = $f2 * 0.001F;

     label7:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (android.graphics.Rect) $r5;

        $i0 = $r9.<android.graphics.Rect: int left>;

        $f3 = (float) $i0;

        $f3 = $f3 * $f2;

        $f3 = $f3 + $f0;

        $f3 = $f3 - 5.0F;

        $f3 = 2.0F + $f3;

        $i0 = $r9.<android.graphics.Rect: int top>;

        $f4 = (float) $i0;

        $f4 = $f4 * $f2;

        $f4 = $f4 + $f1;

        $f4 = $f4 - 5.0F;

        $f4 = 2.0F + $f4;

        $i0 = $r9.<android.graphics.Rect: int right>;

        $f5 = (float) $i0;

        $f5 = $f5 * $f2;

        $f5 = $f5 + $f0;

        $f5 = $f5 + 5.0F;

        $f5 = 2.0F + $f5;

        $i0 = $r9.<android.graphics.Rect: int bottom>;

        $f6 = (float) $i0;

        $f6 = $f6 * $f2;

        $f6 = $f6 + $f1;

        $f6 = $f6 + 5.0F;

        $f6 = 2.0F + $f6;

        $r10 = $r0.<cx.hell.android.lib.pagesview.PagesView: android.graphics.Paint findResultsPaint1>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f3, $f4, $f5, $f6, $r10);

        $i0 = $r9.<android.graphics.Rect: int left>;

        $f3 = (float) $i0;

        $f3 = $f3 * $f2;

        $f3 = $f3 + $f0;

        $f3 = $f3 - 5.0F;

        $i0 = $r9.<android.graphics.Rect: int top>;

        $f4 = (float) $i0;

        $f4 = $f4 * $f2;

        $f4 = $f4 + $f1;

        $f4 = $f4 - 5.0F;

        $i0 = $r9.<android.graphics.Rect: int right>;

        $f5 = (float) $i0;

        $f5 = $f5 * $f2;

        $f5 = $f5 + $f0;

        $f5 = 5.0F + $f5;

        $i0 = $r9.<android.graphics.Rect: int bottom>;

        $f6 = (float) $i0;

        $f6 = $f6 * $f2;

        $f6 = $f6 + $f1;

        $f6 = 5.0F + $f6;

        $r10 = $r0.<cx.hell.android.lib.pagesview.PagesView: android.graphics.Paint findResultsPaint2>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f3, $f4, $f5, $f6, $r10);

        goto label7;

     label8:
        return;
    }

    private void drawPages(android.graphics.Canvas)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        android.graphics.Canvas $r1;
        android.graphics.Rect $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.util.LinkedList $r4;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        cx.hell.android.lib.pagesview.PagesProvider $r5;
        int[][] $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        int[] $r9;
        cx.hell.android.lib.pagesview.Tile $r10;
        android.graphics.Bitmap $r11;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $r1 := @parameter0: android.graphics.Canvas;

        $z0 = $r0.<cx.hell.android.lib.pagesview.PagesView: boolean eink>;

        if $z0 == 0 goto label01;

        virtualinvoke $r1.<android.graphics.Canvas: void drawColor(int)>(-1);

     label01:
        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        $f0 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float getCurrentMarginX()>();

        $f1 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float getCurrentMarginY()>();

        $r5 = $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.lib.pagesview.PagesProvider pagesProvider>;

        if $r5 == null goto label18;

        $i4 = $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomLevel>;

        if $i4 >= 5 goto label02;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomLevel> = 5;

     label02:
        $r6 = $r0.<cx.hell.android.lib.pagesview.PagesView: int[][] pageSizes>;

        $i4 = lengthof $r6;

        $i5 = $r0.<cx.hell.android.lib.pagesview.PagesView: int left>;

        $i6 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $i6 = $i6 / 2;

        $i5 = $i5 - $i6;

        $i6 = $r0.<cx.hell.android.lib.pagesview.PagesView: int top>;

        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $i1 = $i1 / 2;

        $i6 = $i6 - $i1;

        $z0 = $r0.<cx.hell.android.lib.pagesview.PagesView: boolean mtZoomActive>;

        if $z0 == 0 goto label05;

        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $f2 = (float) $i1;

        $f3 = $r0.<cx.hell.android.lib.pagesview.PagesView: float mtZoomValue>;

        $f2 = $f2 / $f3;

        $i7 = (int) $f2;

        $i1 = $i7;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $i0 = $i0 / 2;

        $i8 = $i7 / 2;

        $i0 = $i0 - $i8;

        $i8 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $f2 = (float) $i8;

        $f3 = $r0.<cx.hell.android.lib.pagesview.PagesView: float mtZoomValue>;

        $f2 = $f2 / $f3;

        $i8 = (int) $f2;

        $i9 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $i9 = $i9 / 2;

        $i10 = $i8 / 2;

        $i9 = $i9 - $i10;

        $f2 = 1.0F;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("adj:");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("cx.hell.android.pdfview", $r8);

     label03:
        $f3 = $f1;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int currentPage> = -1;

        $r9 = newarray (int)[2];

        $i7 = 0;

     label04:
        if $i7 < $i4 goto label06;

        $r5 = $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.lib.pagesview.PagesProvider pagesProvider>;

        virtualinvoke $r5.<cx.hell.android.lib.pagesview.PagesProvider: void setVisibleTiles(java.util.Collection)>($r4);

        return;

     label05:
        $i0 = $i5;

        $i1 = $i6;

        $i8 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $i9 = (int) $f0;

        $i7 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getCurrentMaxPageWidth()>();

        $i8 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int adjustPosition(int,int,int,int)>($i5, $i8, $i9, $i7);

        $i5 = $i8;

        $i9 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $i7 = (int) $f1;

        $i10 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getCurrentDocumentHeight()>();

        $i9 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int adjustPosition(int,int,int,int)>($i6, $i9, $i7, $i10);

        $i6 = $i9;

        $i7 = $r0.<cx.hell.android.lib.pagesview.PagesView: int left>;

        $i0 = $i8 - $i0;

        $i0 = $i7 + $i0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int left> = $i0;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int top>;

        $i1 = $i9 - $i1;

        $i1 = $i0 + $i1;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int top> = $i1;

        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $i0 = 0;

        $i8 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $i9 = 0;

        $r5 = $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.lib.pagesview.PagesProvider pagesProvider>;

        $f2 = virtualinvoke $r5.<cx.hell.android.lib.pagesview.PagesProvider: float getRenderAhead()>();

        goto label03;

     label06:
        $i10 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getCurrentPageWidth(int)>($i7);

        $f4 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float getCurrentPageHeight(int)>($i7);

        $i11 = (int) $f4;

        $f4 = (float) $i10;

        $f4 = $f4 + $f0;

        $i2 = (int) $f4;

        $f5 = (float) $i2;

        $f4 = $f3;

        $f6 = (float) $i11;

        $f6 = $f6 + $f3;

        $i2 = (int) $f6;

        $f6 = (float) $i2;

        $i2 = (int) $f0;

        $i3 = (int) $f3;

        $i12 = (int) $f5;

        $i13 = (int) $f6;

        $i14 = $i5 + $i0;

        $i15 = $i6 + $i9;

        $i16 = $i5 + $i0;

        $i16 = $i16 + $i1;

        $i17 = $i6 + $i9;

        $f5 = (float) $i8;

        $f5 = $f5 * $f2;

        $i18 = (int) $f5;

        $i17 = $i17 + $i18;

        $z0 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: boolean rectsintersect(int,int,int,int,int,int,int,int)>($i2, $i3, $i12, $i13, $i14, $i15, $i16, $i17);

        if $z0 == 0 goto label09;

        $i2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int currentPage>;

        if $i2 != -1 goto label07;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int currentPage> = $i7;

     label07:
        $i2 = (int) $f0;

        $i2 = $i2 - $i5;

        $i2 = $i2 - $i0;

        $i3 = (int) $f4;

        $i3 = $i3 - $i6;

        $i3 = $i3 - $i9;

        specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void getGoodTileSizes(int[],int,int)>($r9, $i10, $i11);

        $i12 = 0;

     label08:
        $i13 = $r9[0];

        $i13 = $i13 + $i10;

        $i13 = $i13 + -1;

        $i14 = $r9[0];

        $i13 = $i13 / $i14;

        if $i12 < $i13 goto label10;

     label09:
        $f4 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float getCurrentPageHeight(int)>($i7);

        $f4 = $f4 + $f1;

        $f3 = $f3 + $f4;

        $i7 = $i7 + 1;

        goto label04;

     label10:
        $i13 = 0;

     label11:
        $i14 = $r9[1];

        $i14 = $i14 + $i11;

        $i14 = $i14 + -1;

        $i15 = $r9[1];

        $i14 = $i14 / $i15;

        if $i13 < $i14 goto label12;

        $i12 = $i12 + 1;

        goto label08;

     label12:
        $i14 = $r9[0];

        $i14 = $i14 * $i12;

        $i14 = $i14 + $i2;

        $r2.<android.graphics.Rect: int left> = $i14;

        $i14 = $r9[1];

        $i14 = $i14 * $i13;

        $i14 = $i14 + $i3;

        $r2.<android.graphics.Rect: int top> = $i14;

        $i14 = $r2.<android.graphics.Rect: int left>;

        $i15 = $r9[0];

        $i14 = $i14 + $i15;

        $r2.<android.graphics.Rect: int right> = $i14;

        $i14 = $r2.<android.graphics.Rect: int top>;

        $i15 = $r9[1];

        $i14 = $i14 + $i15;

        $r2.<android.graphics.Rect: int bottom> = $i14;

        $f4 = (float) $i8;

        $f4 = $f4 * $f2;

        $i14 = (int) $f4;

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean intersects(int,int,int,int)>(0, 0, $i1, $i14);

        if $z0 == 0 goto label17;

        $r10 = new cx.hell.android.lib.pagesview.Tile;

        $i14 = $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomLevel>;

        $f4 = (float) $i14;

        $f5 = $r0.<cx.hell.android.lib.pagesview.PagesView: float scaling0>;

        $f4 = $f4 * $f5;

        $i14 = (int) $f4;

        $i15 = $r9[0];

        $i15 = $i12 * $i15;

        $i16 = $r9[1];

        $i16 = $i13 * $i16;

        $i17 = $r0.<cx.hell.android.lib.pagesview.PagesView: int rotation>;

        $i18 = $r9[0];

        $i19 = $r9[1];

        specialinvoke $r10.<cx.hell.android.lib.pagesview.Tile: void <init>(int,int,int,int,int,int,int)>($i7, $i14, $i15, $i16, $i17, $i18, $i19);

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean intersects(int,int,int,int)>(0, 0, $i1, $i8);

        if $z0 == 0 goto label16;

        $r5 = $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.lib.pagesview.PagesProvider pagesProvider>;

        $r11 = virtualinvoke $r5.<cx.hell.android.lib.pagesview.PagesProvider: android.graphics.Bitmap getPageBitmap(cx.hell.android.lib.pagesview.Tile)>($r10);

        if $r11 == null goto label16;

        $r3.<android.graphics.Rect: int left> = 0;

        $r3.<android.graphics.Rect: int top> = 0;

        $i14 = virtualinvoke $r11.<android.graphics.Bitmap: int getWidth()>();

        $r3.<android.graphics.Rect: int right> = $i14;

        $i14 = virtualinvoke $r11.<android.graphics.Bitmap: int getHeight()>();

        $r3.<android.graphics.Rect: int bottom> = $i14;

        $i14 = $r2.<android.graphics.Rect: int right>;

        $i15 = $i2 + $i10;

        if $i14 <= $i15 goto label13;

        $i14 = virtualinvoke $r11.<android.graphics.Bitmap: int getWidth()>();

        $f4 = (float) $i14;

        $i14 = $i2 + $i10;

        $i15 = $r2.<android.graphics.Rect: int left>;

        $i14 = $i14 - $i15;

        $f5 = (float) $i14;

        $f4 = $f4 * $f5;

        $i14 = $r2.<android.graphics.Rect: int right>;

        $i15 = $r2.<android.graphics.Rect: int left>;

        $i14 = $i14 - $i15;

        $f5 = (float) $i14;

        $f4 = $f4 / $f5;

        $i14 = (int) $f4;

        $r3.<android.graphics.Rect: int right> = $i14;

        $i14 = $i2 + $i10;

        $r2.<android.graphics.Rect: int right> = $i14;

     label13:
        $i14 = $r2.<android.graphics.Rect: int bottom>;

        $i15 = $i3 + $i11;

        if $i14 <= $i15 goto label14;

        $i14 = virtualinvoke $r11.<android.graphics.Bitmap: int getHeight()>();

        $f4 = (float) $i14;

        $i14 = $i3 + $i11;

        $i15 = $r2.<android.graphics.Rect: int top>;

        $i14 = $i14 - $i15;

        $f5 = (float) $i14;

        $f4 = $f4 * $f5;

        $i14 = $r2.<android.graphics.Rect: int bottom>;

        $i15 = $r2.<android.graphics.Rect: int top>;

        $i14 = $i14 - $i15;

        $f5 = (float) $i14;

        $f4 = $f4 / $f5;

        $i14 = (int) $f4;

        $r3.<android.graphics.Rect: int bottom> = $i14;

        $i14 = $i3 + $i11;

        $r2.<android.graphics.Rect: int bottom> = $i14;

     label14:
        $z0 = $r0.<cx.hell.android.lib.pagesview.PagesView: boolean mtZoomActive>;

        if $z0 == 0 goto label15;

        $i14 = $r2.<android.graphics.Rect: int left>;

        $i15 = $i1 / 2;

        $i14 = $i14 - $i15;

        $f4 = (float) $i14;

        $f5 = $r0.<cx.hell.android.lib.pagesview.PagesView: float mtZoomValue>;

        $f4 = $f4 * $f5;

        $i14 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $i14 = $i14 / 2;

        $f5 = (float) $i14;

        $f4 = $f4 + $f5;

        $i14 = (int) $f4;

        $r2.<android.graphics.Rect: int left> = $i14;

        $i14 = $r2.<android.graphics.Rect: int right>;

        $i15 = $i1 / 2;

        $i14 = $i14 - $i15;

        $f4 = (float) $i14;

        $f5 = $r0.<cx.hell.android.lib.pagesview.PagesView: float mtZoomValue>;

        $f4 = $f4 * $f5;

        $i14 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $i14 = $i14 / 2;

        $f5 = (float) $i14;

        $f4 = $f4 + $f5;

        $i14 = (int) $f4;

        $r2.<android.graphics.Rect: int right> = $i14;

        $i14 = $r2.<android.graphics.Rect: int top>;

        $i15 = $i8 / 2;

        $i14 = $i14 - $i15;

        $f4 = (float) $i14;

        $f5 = $r0.<cx.hell.android.lib.pagesview.PagesView: float mtZoomValue>;

        $f4 = $f4 * $f5;

        $i14 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $i14 = $i14 / 2;

        $f5 = (float) $i14;

        $f4 = $f4 + $f5;

        $i14 = (int) $f4;

        $r2.<android.graphics.Rect: int top> = $i14;

        $i14 = $r2.<android.graphics.Rect: int bottom>;

        $i15 = $i8 / 2;

        $i14 = $i14 - $i15;

        $f4 = (float) $i14;

        $f5 = $r0.<cx.hell.android.lib.pagesview.PagesView: float mtZoomValue>;

        $f4 = $f4 * $f5;

        $i14 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $i14 = $i14 / 2;

        $f5 = (float) $i14;

        $f4 = $f4 + $f5;

        $i14 = (int) $f4;

        $r2.<android.graphics.Rect: int bottom> = $i14;

     label15:
        specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void drawBitmap(android.graphics.Canvas,android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect)>($r1, $r11, $r3, $r2);

     label16:
        $z0 = $r0.<cx.hell.android.lib.pagesview.PagesView: boolean mtZoomActive>;

        if $z0 != 0 goto label17;

        virtualinvoke $r4.<java.util.LinkedList: boolean add(java.lang.Object)>($r10);

     label17:
        $i13 = $i13 + 1;

        goto label11;

     label18:
        return;
    }

    private int getCurrentDocumentHeight()
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        float $f0, $f1, $f2;
        float[] $r1;
        int $i0;
        byte $b1;
        int[][] $r2;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: float[] realDocumentSize>;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int rotation>;

        $i0 = $i0 % 2;

        if $i0 != 0 goto label2;

        $b1 = 1;

     label1:
        $f0 = $r1[$b1];

        $f0 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float scale(float)>($f0);

        $r2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int[][] pageSizes>;

        $i0 = lengthof $r2;

        $i0 = $i0 + -1;

        $f1 = (float) $i0;

        $f2 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float getCurrentMarginY()>();

        $f1 = $f1 * $f2;

        $f0 = $f0 + $f1;

        $i0 = (int) $f0;

        return $i0;

     label2:
        $b1 = 0;

        goto label1;
    }

    private float getCurrentMarginX()
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        float $f0;
        int $i0;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int marginX>;

        $f0 = (float) $i0;

        $f0 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float scale(float)>($f0);

        return $f0;
    }

    private float getCurrentMarginY()
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        float $f0;
        int $i0;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int marginY>;

        $f0 = (float) $i0;

        $f0 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float scale(float)>($f0);

        return $f0;
    }

    private int getCurrentMaxPageWidth()
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        float $f0;
        float[] $r1;
        int $i0;
        byte $b1;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: float[] maxRealPageSize>;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int rotation>;

        $i0 = $i0 % 2;

        if $i0 != 0 goto label2;

        $b1 = 0;

     label1:
        $f0 = $r1[$b1];

        $f0 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float scale(float)>($f0);

        $i0 = (int) $f0;

        return $i0;

     label2:
        $b1 = 1;

        goto label1;
    }

    private float getCurrentPageHeight(int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0;
        float $f0;
        int[] $r1;
        int[][] $r2;
        byte $b1;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter0: int;

        $r2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int[][] pageSizes>;

        $r1 = $r2[$i0];

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int rotation>;

        $i0 = $i0 % 2;

        if $i0 != 0 goto label2;

        $b1 = 1;

     label1:
        $i0 = $r1[$b1];

        $f0 = (float) $i0;

        $f0 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float scale(float)>($f0);

        return $f0;

     label2:
        $b1 = 0;

        goto label1;
    }

    private int getCurrentPageWidth(int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0;
        float $f0;
        int[] $r1;
        int[][] $r2;
        byte $b1;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter0: int;

        $r2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int[][] pageSizes>;

        $r1 = $r2[$i0];

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int rotation>;

        $i0 = $i0 % 2;

        if $i0 != 0 goto label2;

        $b1 = 0;

     label1:
        $i0 = $r1[$b1];

        $f0 = (float) $i0;

        $f0 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float scale(float)>($f0);

        $i0 = (int) $f0;

        return $i0;

     label2:
        $b1 = 1;

        goto label1;
    }

    private int getGoodTileSize(int, int, int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i2 := @parameter0: int;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i2 > 2 goto label1;

        return 2;

     label1:
        if $i2 <= $i1 goto label2;

        $i3 = $i2 + $i1;

        $i3 = $i3 + -1;

        $i1 = $i3 / $i1;

        $i2 = $i2 + $i1;

        $i2 = $i2 + -1;

        $i2 = $i2 / $i1;

        if $i2 >= $i0 goto label2;

        return $i0;

     label2:
        return $i2;
    }

    private void getGoodTileSizes(int[], int, int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int[] $r1;
        int $i0, $i1;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $r1 := @parameter0: int[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i0 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getGoodTileSize(int,int,int)>($i0, 256, 640);

        $r1[0] = $i0;

        $i0 = $r1[0];

        $i0 = 230400 / $i0;

        $i0 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getGoodTileSize(int,int,int)>($i1, 128, $i0);

        $r1[1] = $i0;

        return;
    }

    private int getLowerBound(int, int, int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0, $i1, $i2;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        if $i2 > $i0 goto label1;

        $i1 = $i1 + $i2;

        $i0 = $i1 - $i0;

        return $i0;

     label1:
        return 0;
    }

    private android.graphics.Point getPagePositionInDocumentWithZoom(int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0, $i1;
        float $f0, $f1, $f2, $f3;
        android.graphics.Point $r1;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter0: int;

        $f0 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float getCurrentMarginX()>();

        $f1 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float getCurrentMarginY()>();

        $f2 = 0.0F;

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        $i0 = $i0 + 1;

        $f3 = (float) $i0;

        $f1 = $f3 * $f1;

        $f2 = $f2 + $f1;

        $r1 = new android.graphics.Point;

        $i0 = (int) $f0;

        $i1 = (int) $f2;

        specialinvoke $r1.<android.graphics.Point: void <init>(int,int)>($i0, $i1);

        return $r1;

     label2:
        $f3 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float getCurrentPageHeight(int)>($i1);

        $f2 = $f2 + $f3;

        $i1 = $i1 + 1;

        goto label1;
    }

    private android.graphics.Point getPagePositionOnScreen(int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        int[][] $r4;
        android.graphics.Point $r5, $r6, $r7;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("page must be >= 0: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        $r4 = $r0.<cx.hell.android.lib.pagesview.PagesView: int[][] pageSizes>;

        $i1 = lengthof $r4;

        if $i0 < $i1 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("page number too big: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        $r5 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: android.graphics.Point getPagePositionInDocumentWithZoom(int)>($i0);

        $r6 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: android.graphics.Point getScreenPositionOverDocument()>();

        $r7 = new android.graphics.Point;

        $i0 = $r5.<android.graphics.Point: int x>;

        $i1 = $r6.<android.graphics.Point: int x>;

        $i0 = $i0 - $i1;

        $i2 = $r5.<android.graphics.Point: int y>;

        $i1 = $r6.<android.graphics.Point: int y>;

        $i1 = $i2 - $i1;

        specialinvoke $r7.<android.graphics.Point: void <init>(int,int)>($i0, $i1);

        return $r7;
    }

    private android.graphics.Point getScreenPositionOverDocument()
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        float $f0, $f1;
        int $i0, $i1;
        android.graphics.Point $r1;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int top>;

        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $i1 = $i1 / 2;

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int left>;

        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $i1 = $i1 / 2;

        $i0 = $i0 - $i1;

        $f0 = (float) $i0;

        $r1 = new android.graphics.Point;

        $i1 = (int) $f0;

        $i0 = (int) $f1;

        specialinvoke $r1.<android.graphics.Point: void <init>(int,int)>($i1, $i0);

        return $r1;
    }

    private int getUpperBound(int, int, int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0, $i1, $i2;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter0: int;

        $i2 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i1 > $i0 goto label1;

        return $i2;

     label1:
        $i2 = $i2 * 2;

        $i2 = $i2 + $i1;

        $i0 = $i2 - $i0;

        return $i0;
    }

    private boolean rectsintersect(int, int, int, int, int, int, int, int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $i4 := @parameter4: int;

        $i5 := @parameter5: int;

        $i6 := @parameter6: int;

        $i7 := @parameter7: int;

        if $i2 < $i4 goto label1;

        if $i0 > $i6 goto label1;

        if $i3 < $i5 goto label1;

        if $i1 <= $i7 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    private float scale(float)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        float $f0, $f1;
        int $i0;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $f0 := @parameter0: float;

        $f1 = $r0.<cx.hell.android.lib.pagesview.PagesView: float scaling0>;

        $f0 = $f1 * $f0;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomLevel>;

        $f1 = (float) $i0;

        $f0 = $f0 * $f1;

        $f0 = $f0 * 0.001F;

        return $f0;
    }

    private boolean unlocksVerticalLock(android.view.MotionEvent)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        android.view.MotionEvent $r1;
        float $f0, $f1, $f2;
        double $d0, $d1;
        byte $b0;
        int $i1;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $r1 := @parameter0: android.view.MotionEvent;

        $f0 = virtualinvoke $r1.<android.view.MotionEvent: float getX()>();

        $f1 = $r0.<cx.hell.android.lib.pagesview.PagesView: float downX>;

        $f0 = $f0 - $f1;

        $f0 = staticinvoke <java.lang.Math: float abs(float)>($f0);

        $f1 = virtualinvoke $r1.<android.view.MotionEvent: float getY()>();

        $f2 = $r0.<cx.hell.android.lib.pagesview.PagesView: float downY>;

        $f1 = $f1 - $f2;

        $f1 = staticinvoke <java.lang.Math: float abs(float)>($f1);

        $d0 = (double) $f1;

        $d1 = (double) $f0;

        $d1 = 0.25 * $d1;

        $b0 = $d0 cmpl $d1;

        if $b0 > 0 goto label3;

        $f1 = $r0.<cx.hell.android.lib.pagesview.PagesView: float maxExcursionY>;

        $d0 = (double) $f1;

        $d1 = (double) $f0;

        $d1 = 0.8 * $d1;

        $b0 = $d0 cmpl $d1;

        if $b0 <= 0 goto label1;

        return 0;

     label1:
        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $i1 = $i1 / 5;

        $f1 = (float) $i1;

        $b0 = $f0 cmpl $f1;

        if $b0 > 0 goto label2;

        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $i1 = $i1 / 5;

        $f1 = (float) $i1;

        $b0 = $f0 cmpl $f1;

        if $b0 <= 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public void computeScroll()
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        android.widget.Scroller $r1;
        boolean $z0;
        int $i0;
        android.app.Activity $r2;
        cx.hell.android.pdfview.OpenFileActivity $r3;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: android.widget.Scroller scroller>;

        if $r1 != null goto label1;

        return;

     label1:
        $r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: android.widget.Scroller scroller>;

        $z0 = virtualinvoke $r1.<android.widget.Scroller: boolean computeScrollOffset()>();

        if $z0 == 0 goto label2;

        $r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: android.widget.Scroller scroller>;

        $i0 = virtualinvoke $r1.<android.widget.Scroller: int getCurrX()>();

        $r0.<cx.hell.android.lib.pagesview.PagesView: int left> = $i0;

        $r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: android.widget.Scroller scroller>;

        $i0 = virtualinvoke $r1.<android.widget.Scroller: int getCurrY()>();

        $r0.<cx.hell.android.lib.pagesview.PagesView: int top> = $i0;

        $r2 = $r0.<cx.hell.android.lib.pagesview.PagesView: android.app.Activity activity>;

        $r3 = (cx.hell.android.pdfview.OpenFileActivity) $r2;

        virtualinvoke $r3.<cx.hell.android.pdfview.OpenFileActivity: void showPageNumber(boolean)>(0);

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void postInvalidate()>();

     label2:
        return;
    }

    public boolean doAction(int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0, $i2;
        float $f0;
        byte $b1;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter0: int;

        $f0 = staticinvoke <cx.hell.android.pdfview.Actions: float getZoomValue(int)>($i0);

        $b1 = 0.0F cmpg $f0;

        if $b1 >= 0 goto label1;

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void zoom(float)>($f0);

        return 1;

     label1:
        lookupswitch($i0)
        {
            case 1: goto label7;
            case 2: goto label8;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            case 6: goto label6;
            default: goto label2;
        };

     label2:
        return 0;

     label3:
        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int currentPage>;

        $i0 = $i0 + 1;

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void scrollToPage(int,boolean)>($i0, 0);

        return 1;

     label4:
        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int currentPage>;

        $i0 = $i0 + -1;

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void scrollToPage(int,boolean)>($i0, 0);

        return 1;

     label5:
        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int currentPage>;

        $i0 = $i0 + -1;

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void scrollToPage(int)>($i0);

        return 1;

     label6:
        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int currentPage>;

        $i0 = $i0 + 1;

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void scrollToPage(int)>($i0);

        return 1;

     label7:
        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int top>;

        $i2 = virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getHeight()>();

        $i2 = $i2 + -16;

        $i0 = $i0 + $i2;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int top> = $i0;

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void invalidate()>();

        return 1;

     label8:
        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int top>;

        $i2 = virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getHeight()>();

        $i2 = $i2 + -16;

        $i0 = $i0 - $i2;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int top> = $i0;

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void invalidate()>();

        return 1;
    }

    public int getCurrentAbsoluteZoom()
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int i0;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomLevel>;

        return i0;
    }

    public int getCurrentPage()
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int i0;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int currentPage>;

        return i0;
    }

    public boolean getFindMode()
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        boolean z0;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        z0 = $r0.<cx.hell.android.lib.pagesview.PagesView: boolean findMode>;

        return z0;
    }

    public java.util.List getFindResults()
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        java.util.List r1;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: java.util.List findResults>;

        return r1;
    }

    public int getPageCount()
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int[][] $r1;
        int $i0;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int[][] pageSizes>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public int getPageRotation()
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int i0;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int rotation>;

        return i0;
    }

    public void goToBookmark()
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        cx.hell.android.pdfview.BookmarkEntry $r1;
        float $f0, $f1;
        byte $b0;
        int $i1, $i2;
        int[][] $r2;
        android.graphics.Point $r3;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.pdfview.BookmarkEntry bookmarkToRestore>;

        if $r1 == null goto label1;

        $r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.pdfview.BookmarkEntry bookmarkToRestore>;

        $f0 = $r1.<cx.hell.android.pdfview.BookmarkEntry: float absoluteZoomLevel>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 == 0 goto label1;

        $r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.pdfview.BookmarkEntry bookmarkToRestore>;

        $i1 = $r1.<cx.hell.android.pdfview.BookmarkEntry: int page>;

        if $i1 < 0 goto label1;

        $r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.pdfview.BookmarkEntry bookmarkToRestore>;

        $i1 = $r1.<cx.hell.android.pdfview.BookmarkEntry: int page>;

        $r2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int[][] pageSizes>;

        $i2 = lengthof $r2;

        if $i1 < $i2 goto label2;

     label1:
        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $i1 = $i1 / 2;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int top> = $i1;

        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $i1 = $i1 / 2;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int left> = $i1;

        return;

     label2:
        $r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.pdfview.BookmarkEntry bookmarkToRestore>;

        $f0 = $r1.<cx.hell.android.pdfview.BookmarkEntry: float absoluteZoomLevel>;

        $f1 = $r0.<cx.hell.android.lib.pagesview.PagesView: float scaling0>;

        $f0 = $f0 / $f1;

        $i1 = (int) $f0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomLevel> = $i1;

        $r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.pdfview.BookmarkEntry bookmarkToRestore>;

        $i1 = $r1.<cx.hell.android.pdfview.BookmarkEntry: int rotation>;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int rotation> = $i1;

        $r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.pdfview.BookmarkEntry bookmarkToRestore>;

        $i1 = $r1.<cx.hell.android.pdfview.BookmarkEntry: int page>;

        $r3 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: android.graphics.Point getPagePositionInDocumentWithZoom(int)>($i1);

        $r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.pdfview.BookmarkEntry bookmarkToRestore>;

        $i1 = $r1.<cx.hell.android.pdfview.BookmarkEntry: int page>;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int currentPage> = $i1;

        $i1 = $r3.<android.graphics.Point: int y>;

        $i2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $i2 = $i2 / 2;

        $i1 = $i1 + $i2;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int top> = $i1;

        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int currentPage>;

        $i1 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getCurrentPageWidth(int)>($i1);

        $i1 = $i1 / 2;

        $i2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int marginX>;

        $i1 = $i1 + $i2;

        $r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.pdfview.BookmarkEntry bookmarkToRestore>;

        $i2 = $r1.<cx.hell.android.pdfview.BookmarkEntry: int offsetX>;

        $i1 = $i1 + $i2;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int left> = $i1;

        $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.pdfview.BookmarkEntry bookmarkToRestore> = null;

        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        android.graphics.Canvas $r1;
        boolean $z0;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $r1 := @parameter0: android.graphics.Canvas;

        $z0 = $r0.<cx.hell.android.lib.pagesview.PagesView: boolean nook2>;

        if $z0 == 0 goto label1;

        staticinvoke <cx.hell.android.lib.pagesview.N2EpdController: void setGL16Mode()>();

     label1:
        specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void drawPages(android.graphics.Canvas)>($r1);

        $z0 = $r0.<cx.hell.android.lib.pagesview.PagesView: boolean findMode>;

        if $z0 == 0 goto label2;

        specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void drawFindResults(android.graphics.Canvas)>($r1);

     label2:
        return;
    }

    public void onImagesRendered(java.util.Map)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        java.util.Map $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.graphics.Rect $r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        int[][] $r3;
        cx.hell.android.lib.pagesview.PagesProvider $r4;
        boolean $z0;
        java.util.Set $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        cx.hell.android.lib.pagesview.Tile $r8;
        android.graphics.Bitmap $r9;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $r1 := @parameter0: java.util.Map;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        $i2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int left>;

        $i3 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $i3 = $i3 / 2;

        $i3 = $i2 - $i3;

        $i2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int top>;

        $i4 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $i4 = $i4 / 2;

        $i4 = $i2 - $i4;

        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: int[][] pageSizes>;

        $i2 = lengthof $r3;

        $f2 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float getCurrentMarginX()>();

        $f3 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float getCurrentMarginY()>();

        $i5 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $i6 = (int) $f2;

        $i7 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getCurrentMaxPageWidth()>();

        $i3 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int adjustPosition(int,int,int,int)>($i3, $i5, $i6, $i7);

        $i5 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $i6 = (int) $f3;

        $i7 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getCurrentDocumentHeight()>();

        $i4 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int adjustPosition(int,int,int,int)>($i4, $i5, $i6, $i7);

        $f4 = $f3;

        $r4 = $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.lib.pagesview.PagesProvider pagesProvider>;

        $f5 = virtualinvoke $r4.<cx.hell.android.lib.pagesview.PagesProvider: float getRenderAhead()>();

        $i5 = 0;

     label1:
        if $i5 < $i2 goto label2;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("cx.hell.android.pdfview", "New bitmap does not require redraw");

        return;

     label2:
        $i7 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getCurrentPageWidth(int)>($i5);

        $f0 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float getCurrentPageHeight(int)>($i5);

        $i6 = (int) $f0;

        $f0 = (float) $i7;

        $f0 = $f0 + $f2;

        $i7 = (int) $f0;

        $f0 = (float) $i7;

        $f1 = (float) $i6;

        $f1 = $f1 + $f4;

        $i6 = (int) $f1;

        $f1 = (float) $i6;

        $i6 = (int) $f2;

        $i7 = (int) $f4;

        $i8 = (int) $f0;

        $i9 = (int) $f1;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $i0 = $i3 + $i0;

        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $i1 = $i4 + $i1;

        $z0 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: boolean rectsintersect(int,int,int,int,int,int,int,int)>($i6, $i7, $i8, $i9, $i3, $i4, $i0, $i1);

        if $z0 == 0 goto label4;

        $f0 = (float) $i3;

        $f0 = $f2 - $f0;

        $f1 = (float) $i4;

        $f1 = $f4 - $f1;

        $r5 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label5;

     label4:
        $f0 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float getCurrentPageHeight(int)>($i5);

        $f0 = $f0 + $f3;

        $f4 = $f4 + $f0;

        $i5 = $i5 + 1;

        goto label1;

     label5:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (cx.hell.android.lib.pagesview.Tile) $r7;

        $i6 = virtualinvoke $r8.<cx.hell.android.lib.pagesview.Tile: int getPage()>();

        if $i6 != $i5 goto label3;

        $r7 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        $r9 = (android.graphics.Bitmap) $r7;

        $i6 = virtualinvoke $r8.<cx.hell.android.lib.pagesview.Tile: int getX()>();

        $f6 = (float) $i6;

        $f6 = $f6 + $f0;

        $i6 = (int) $f6;

        $r2.<android.graphics.Rect: int left> = $i6;

        $i6 = virtualinvoke $r8.<cx.hell.android.lib.pagesview.Tile: int getY()>();

        $f6 = (float) $i6;

        $f6 = $f6 + $f1;

        $i6 = (int) $f6;

        $r2.<android.graphics.Rect: int top> = $i6;

        $i6 = $r2.<android.graphics.Rect: int left>;

        $i7 = virtualinvoke $r9.<android.graphics.Bitmap: int getWidth()>();

        $i6 = $i6 + $i7;

        $r2.<android.graphics.Rect: int right> = $i6;

        $i6 = $r2.<android.graphics.Rect: int top>;

        $i7 = virtualinvoke $r9.<android.graphics.Bitmap: int getHeight()>();

        $i6 = $i6 + $i7;

        $r2.<android.graphics.Rect: int bottom> = $i6;

        $i6 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $i7 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $f6 = (float) $i7;

        $f6 = $f6 * $f5;

        $i7 = (int) $f6;

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean intersects(int,int,int,int)>(0, 0, $i6, $i7);

        if $z0 == 0 goto label3;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("cx.hell.android.pdfview", "New bitmap forces redraw");

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void postInvalidate()>();

        return;
    }

    public boolean onKey(android.view.View, int, android.view.KeyEvent)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        android.view.View $r1;
        int $i0, $i1;
        android.view.KeyEvent $r2;
        boolean $z0;
        cx.hell.android.pdfview.Actions $r3;
        android.app.Activity $r4;
        cx.hell.android.pdfview.OpenFileActivity $r5;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $r1 := @parameter0: android.view.View;

        $i0 := @parameter1: int;

        $r2 := @parameter2: android.view.KeyEvent;

        $z0 = $r0.<cx.hell.android.lib.pagesview.PagesView: boolean pageWithVolume>;

        if $z0 == 0 goto label01;

        $i1 = virtualinvoke $r2.<android.view.KeyEvent: int getAction()>();

        if $i1 != 1 goto label01;

        lookupswitch($i0)
        {
            case 24: goto label03;
            case 25: goto label04;
            default: goto label01;
        };

     label01:
        $i1 = virtualinvoke $r2.<android.view.KeyEvent: int getAction()>();

        if $i1 != 0 goto label17;

        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.pdfview.Actions actions>;

        $i1 = virtualinvoke $r3.<cx.hell.android.pdfview.Actions: int getAction(int)>($i0);

        lookupswitch($i0)
        {
            case 19: goto label10;
            case 20: goto label10;
            case 21: goto label10;
            case 22: goto label10;
            case 24: goto label08;
            case 25: goto label06;
            case 36: goto label13;
            case 38: goto label12;
            case 39: goto label11;
            case 40: goto label14;
            case 43: goto label15;
            case 44: goto label16;
            case 62: goto label12;
            case 67: goto label11;
            case 84: goto label05;
            case 92: goto label10;
            case 93: goto label10;
            case 94: goto label10;
            case 95: goto label10;
            default: goto label02;
        };

     label02:
        return 0;

     label03:
        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean volumeUpIsDown> = 0;

        return 1;

     label04:
        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean volumeDownIsDown> = 0;

        return 1;

     label05:
        $r4 = $r0.<cx.hell.android.lib.pagesview.PagesView: android.app.Activity activity>;

        $r5 = (cx.hell.android.pdfview.OpenFileActivity) $r4;

        virtualinvoke $r5.<cx.hell.android.pdfview.OpenFileActivity: void showFindDialog()>();

        return 1;

     label06:
        if $i1 == 0 goto label17;

        $z0 = $r0.<cx.hell.android.lib.pagesview.PagesView: boolean volumeDownIsDown>;

        if $z0 != 0 goto label07;

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: boolean doAction(int)>($i1);

     label07:
        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean volumeDownIsDown> = 1;

        return 1;

     label08:
        if $i1 == 0 goto label17;

        $z0 = $r0.<cx.hell.android.lib.pagesview.PagesView: boolean pageWithVolume>;

        if $z0 == 0 goto label17;

        $z0 = $r0.<cx.hell.android.lib.pagesview.PagesView: boolean volumeUpIsDown>;

        if $z0 != 0 goto label09;

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: boolean doAction(int)>($i1);

     label09:
        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean volumeUpIsDown> = 1;

        return 1;

     label10:
        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: boolean doAction(int)>($i1);

        return 1;

     label11:
        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: boolean doAction(int)>(2);

        return 1;

     label12:
        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: boolean doAction(int)>(1);

        return 1;

     label13:
        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int left>;

        $i1 = virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getWidth()>();

        $i1 = $i1 / 4;

        $i0 = $i0 - $i1;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int left> = $i0;

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void invalidate()>();

        return 1;

     label14:
        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int left>;

        $i1 = virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getWidth()>();

        $i1 = $i1 / 4;

        $i0 = $i0 + $i1;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int left> = $i0;

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void invalidate()>();

        return 1;

     label15:
        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void zoom(float)>(0.9090909F);

        return 1;

     label16:
        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void zoom(float)>(1.1F);

        return 1;

     label17:
        return 0;
    }

    public void onRenderingException(cx.hell.android.lib.pagesview.RenderingException)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        cx.hell.android.lib.pagesview.RenderingException $r1;
        android.app.Activity $r2;
        cx.hell.android.lib.pagesview.PagesView$3 $r3;
        java.lang.String $r4;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $r1 := @parameter0: cx.hell.android.lib.pagesview.RenderingException;

        $r2 = $r0.<cx.hell.android.lib.pagesview.PagesView: android.app.Activity activity>;

        $r4 = virtualinvoke $r1.<cx.hell.android.lib.pagesview.RenderingException: java.lang.String getMessage()>();

        $r3 = new cx.hell.android.lib.pagesview.PagesView$3;

        specialinvoke $r3.<cx.hell.android.lib.pagesview.PagesView$3: void <init>(cx.hell.android.lib.pagesview.PagesView,android.app.Activity,java.lang.String)>($r0, $r2, $r4);

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2;
        byte $b4;
        int[][] $r1;
        int[] $r2;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        specialinvoke $r0.<android.view.View: void onSizeChanged(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r0.<cx.hell.android.lib.pagesview.PagesView: int width> = $i0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int height> = $i1;

        $f0 = $r0.<cx.hell.android.lib.pagesview.PagesView: float scaling0>;

        $b4 = $f0 cmpl 0.0F;

        if $b4 != 0 goto label1;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $f0 = (float) $i0;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int marginY>;

        $i0 = $i0 * 2;

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

        $r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int[][] pageSizes>;

        $r2 = $r1[0];

        $i0 = $r2[1];

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $f1 = (float) $i0;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int marginX>;

        $i0 = $i0 * 2;

        $f2 = (float) $i0;

        $f1 = $f1 - $f2;

        $r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int[][] pageSizes>;

        $r2 = $r1[0];

        $i0 = $r2[0];

        $f2 = (float) $i0;

        $f1 = $f1 / $f2;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        $r0.<cx.hell.android.lib.pagesview.PagesView: float scaling0> = $f0;

     label1:
        if $i2 != 0 goto label2;

        if $i3 != 0 goto label2;

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void goToBookmark()>();

     label2:
        return;
    }

    public boolean onTouch(android.view.View, android.view.MotionEvent)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        android.view.View $r1;
        android.view.MotionEvent $r2;
        float $f0, $f1, $f2, $f3;
        long $l0;
        android.view.GestureDetector $r3;
        boolean $z0;
        int $i1, $i3;
        byte $b2;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $r1 := @parameter0: android.view.View;

        $r2 := @parameter1: android.view.MotionEvent;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0.<cx.hell.android.lib.pagesview.PagesView: long lastControlsUseMillis> = $l0;

        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: android.view.GestureDetector gestureDetector>;

        $z0 = virtualinvoke $r3.<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>($r2);

        if $z0 != 0 goto label11;

        $i1 = virtualinvoke $r2.<android.view.MotionEvent: int getAction()>();

        if $i1 != 0 goto label01;

        $f1 = virtualinvoke $r2.<android.view.MotionEvent: float getX()>();

        $r0.<cx.hell.android.lib.pagesview.PagesView: float downX> = $f1;

        $f1 = virtualinvoke $r2.<android.view.MotionEvent: float getY()>();

        $r0.<cx.hell.android.lib.pagesview.PagesView: float downY> = $f1;

        $f1 = $r0.<cx.hell.android.lib.pagesview.PagesView: float downX>;

        $r0.<cx.hell.android.lib.pagesview.PagesView: float lastX> = $f1;

        $f1 = $r0.<cx.hell.android.lib.pagesview.PagesView: float downY>;

        $r0.<cx.hell.android.lib.pagesview.PagesView: float lastY> = $f1;

        $z0 = $r0.<cx.hell.android.lib.pagesview.PagesView: boolean verticalScrollLock>;

        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean lockedVertically> = $z0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: float maxExcursionY> = 0.0F;

        $r0.<cx.hell.android.lib.pagesview.PagesView: android.widget.Scroller scroller> = null;

        return 1;

     label01:
        $i1 = virtualinvoke $r2.<android.view.MotionEvent: int getAction()>();

        if $i1 != 261 goto label02;

        $i1 = staticinvoke <cx.hell.android.pdfview.AndroidReflections: int getMotionEventPointerCount(android.view.MotionEvent)>($r2);

        if $i1 < 2 goto label02;

        $f1 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float distance(android.view.MotionEvent)>($r2);

        $b2 = $f1 cmpl 20.0F;

        if $b2 <= 0 goto label11;

        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean mtZoomActive> = 1;

        $r0.<cx.hell.android.lib.pagesview.PagesView: float mtZoomValue> = 1.0F;

        $f1 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float distance(android.view.MotionEvent)>($r2);

        $r0.<cx.hell.android.lib.pagesview.PagesView: float mtDistanceStart> = $f1;

        $f1 = $r0.<cx.hell.android.lib.pagesview.PagesView: float mtDistanceStart>;

        $r0.<cx.hell.android.lib.pagesview.PagesView: float mtLastDistance> = $f1;

        return 1;

     label02:
        $i1 = virtualinvoke $r2.<android.view.MotionEvent: int getAction()>();

        if $i1 != 2 goto label09;

        $z0 = $r0.<cx.hell.android.lib.pagesview.PagesView: boolean mtZoomActive>;

        if $z0 == 0 goto label05;

        $i1 = staticinvoke <cx.hell.android.pdfview.AndroidReflections: int getMotionEventPointerCount(android.view.MotionEvent)>($r2);

        if $i1 < 2 goto label05;

        $f1 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float distance(android.view.MotionEvent)>($r2);

        $b2 = $f1 cmpl 20.0F;

        if $b2 <= 0 goto label11;

        $f0 = $r0.<cx.hell.android.lib.pagesview.PagesView: float mtLastDistance>;

        $f0 = 0.6F * $f0;

        $f1 = 0.4F * $f1;

        $f1 = $f0 + $f1;

        $r0.<cx.hell.android.lib.pagesview.PagesView: float mtLastDistance> = $f1;

        $f0 = $r0.<cx.hell.android.lib.pagesview.PagesView: float mtDistanceStart>;

        $f1 = $f1 / $f0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: float mtZoomValue> = $f1;

        $f1 = $r0.<cx.hell.android.lib.pagesview.PagesView: float mtZoomValue>;

        $b2 = $f1 cmpg 0.1F;

        if $b2 >= 0 goto label04;

        $r0.<cx.hell.android.lib.pagesview.PagesView: float mtZoomValue> = 0.1F;

     label03:
        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void invalidate()>();

        return 1;

     label04:
        $f1 = $r0.<cx.hell.android.lib.pagesview.PagesView: float mtZoomValue>;

        $b2 = $f1 cmpl 10.0F;

        if $b2 <= 0 goto label03;

        $r0.<cx.hell.android.lib.pagesview.PagesView: float mtZoomValue> = 10.0F;

        goto label03;

     label05:
        $z0 = $r0.<cx.hell.android.lib.pagesview.PagesView: boolean lockedVertically>;

        if $z0 == 0 goto label06;

        $z0 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: boolean unlocksVerticalLock(android.view.MotionEvent)>($r2);

        if $z0 == 0 goto label06;

        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean lockedVertically> = 0;

     label06:
        $f1 = virtualinvoke $r2.<android.view.MotionEvent: float getX()>();

        $f0 = $r0.<cx.hell.android.lib.pagesview.PagesView: float lastX>;

        $f1 = $f1 - $f0;

        $f0 = virtualinvoke $r2.<android.view.MotionEvent: float getY()>();

        $f2 = $r0.<cx.hell.android.lib.pagesview.PagesView: float lastY>;

        $f0 = $f0 - $f2;

        $f2 = virtualinvoke $r2.<android.view.MotionEvent: float getY()>();

        $f3 = $r0.<cx.hell.android.lib.pagesview.PagesView: float downY>;

        $f2 = $f2 - $f3;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>($f2);

        $f3 = $r0.<cx.hell.android.lib.pagesview.PagesView: float maxExcursionY>;

        $b2 = $f2 cmpl $f3;

        if $b2 <= 0 goto label07;

        $r0.<cx.hell.android.lib.pagesview.PagesView: float maxExcursionY> = $f2;

     label07:
        $z0 = $r0.<cx.hell.android.lib.pagesview.PagesView: boolean lockedVertically>;

        if $z0 == 0 goto label08;

        $f1 = 0.0F;

     label08:
        $f1 = neg $f1;

        $i1 = (int) $f1;

        $f1 = neg $f0;

        $i3 = (int) $f1;

        specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void doScroll(int,int)>($i1, $i3);

        $f1 = virtualinvoke $r2.<android.view.MotionEvent: float getX()>();

        $r0.<cx.hell.android.lib.pagesview.PagesView: float lastX> = $f1;

        $f1 = virtualinvoke $r2.<android.view.MotionEvent: float getY()>();

        $r0.<cx.hell.android.lib.pagesview.PagesView: float lastY> = $f1;

        return 1;

     label09:
        $i1 = virtualinvoke $r2.<android.view.MotionEvent: int getAction()>();

        if $i1 == 1 goto label10;

        $i1 = virtualinvoke $r2.<android.view.MotionEvent: int getAction()>();

        if $i1 != 262 goto label11;

     label10:
        $z0 = $r0.<cx.hell.android.lib.pagesview.PagesView: boolean mtZoomActive>;

        if $z0 == 0 goto label11;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r0.<cx.hell.android.lib.pagesview.PagesView: long mtDebounce> = $l0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean mtZoomActive> = 0;

        $f1 = $r0.<cx.hell.android.lib.pagesview.PagesView: float mtZoomValue>;

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void zoom(float)>($f1);

     label11:
        return 1;
    }

    public float pagePosition(int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0, $i1;
        float $f0, $f1, $f2;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter0: int;

        $f1 = 0.0F;

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        if $i0 <= 0 goto label3;

        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int marginY>;

        $f0 = (float) $i1;

        $f2 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float scale(float)>($f0);

        $f0 = (float) $i0;

        $f0 = $f2 * $f0;

        $f1 = $f1 + $f0;

        return $f1;

     label2:
        $f0 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float getCurrentPageHeight(int)>($i1);

        $f1 = $f1 + $f0;

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $f1;
    }

    public void rotate(int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0, $i1;
        java.lang.Throwable $r1;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter0: int;

        entermonitor $r0;

     label1:
        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int rotation>;

        $i0 = $i1 + $i0;

        $i0 = $i0 % 4;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int rotation> = $i0;

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void invalidate()>();

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void scrollToFindResult(int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0, $i1;
        android.graphics.Rect $r1, $r6;
        float $f0, $f1, $f2;
        java.util.List $r2;
        boolean $z0;
        java.lang.Object $r3;
        cx.hell.android.lib.pagesview.FindResult $r4;
        java.util.Iterator $r5;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter0: int;

        $r2 = $r0.<cx.hell.android.lib.pagesview.PagesView: java.util.List findResults>;

        if $r2 == null goto label4;

        $r2 = $r0.<cx.hell.android.lib.pagesview.PagesView: java.util.List findResults>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        $r2 = $r0.<cx.hell.android.lib.pagesview.PagesView: java.util.List findResults>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (cx.hell.android.lib.pagesview.FindResult) $r3;

        $r2 = $r4.<cx.hell.android.lib.pagesview.FindResult: java.util.List markers>;

        $r5 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        $i0 = $r1.<android.graphics.Rect: int left>;

        $i1 = $r1.<android.graphics.Rect: int right>;

        $i0 = $i0 + $i1;

        $i0 = $i0 / 2;

        $f1 = (float) $i0;

        $f1 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float scale(float)>($f1);

        $i0 = $r4.<cx.hell.android.lib.pagesview.FindResult: int page>;

        $f0 = virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float pagePosition(int)>($i0);

        $i1 = $r1.<android.graphics.Rect: int top>;

        $i0 = $r1.<android.graphics.Rect: int bottom>;

        $i0 = $i1 + $i0;

        $i0 = $i0 / 2;

        $f2 = (float) $i0;

        $f2 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float scale(float)>($f2);

        $f0 = $f0 + $f2;

        $f2 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float getCurrentMarginX()>();

        $f1 = $f2 + $f1;

        $i0 = (int) $f1;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int left> = $i0;

        $i0 = (int) $f0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int top> = $i0;

        return;

     label3:
        $r3 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (android.graphics.Rect) $r3;

        virtualinvoke $r1.<android.graphics.Rect: void union(android.graphics.Rect)>($r6);

        goto label2;

     label4:
        return;
    }

    public void scrollToPage(int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0;
        java.lang.Throwable $r1;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter0: int;

        entermonitor $r0;

     label1:
        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void scrollToPage(int,boolean)>($i0, 1);

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void scrollToPage(int, boolean)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        boolean $z0;
        int $i0, $i1;
        float $f0, $f1;
        java.lang.Throwable $r1;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        entermonitor $r0;

        if $i0 >= 0 goto label5;

        $i0 = 0;

     label1:
        if $z0 == 0 goto label6;

     label2:
        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $i1 = $i1 / 2;

        $f0 = (float) $i1;

        $f1 = virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float pagePosition(int)>($i0);

        $f0 = $f0 + $f1;

     label3:
        $i1 = (int) $f0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int top> = $i1;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int currentPage> = $i0;

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void invalidate()>();

     label4:
        exitmonitor $r0;

        return;

     label5:
        $i1 = virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getPageCount()>();

        if $i0 < $i1 goto label1;

        $i0 = virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getPageCount()>();

        $i0 = $i0 + -1;

        goto label1;

     label6:
        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int top>;

        $f0 = (float) $i1;

        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int currentPage>;

        $f1 = virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float pagePosition(int)>($i1);

        $f0 = $f0 - $f1;

        $f1 = virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float pagePosition(int)>($i0);

     label7:
        $f0 = $f0 + $f1;

        goto label3;

     label8:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label2 to label4 with label8;
        catch java.lang.Throwable from label5 to label7 with label8;
    }

    public void setActions(cx.hell.android.pdfview.Actions)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        cx.hell.android.pdfview.Actions $r1;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $r1 := @parameter0: cx.hell.android.pdfview.Actions;

        $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.pdfview.Actions actions> = $r1;

        return;
    }

    public void setColorMode(int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter0: int;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int colorMode> = $i0;

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void invalidate()>();

        return;
    }

    public void setDoubleTap(int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter0: int;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int doubleTapAction> = $i0;

        return;
    }

    public void setEink(boolean)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        boolean $z0;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $z0 := @parameter0: boolean;

        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean eink> = $z0;

        return;
    }

    public void setFindMode(boolean)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        boolean $z0, $z1;
        java.lang.Throwable $r1;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $z0 := @parameter0: boolean;

        entermonitor $r0;

     label1:
        $z1 = $r0.<cx.hell.android.lib.pagesview.PagesView: boolean findMode>;

        if $z1 == $z0 goto label2;

        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean findMode> = $z0;

        if $z0 != 0 goto label2;

        $r0.<cx.hell.android.lib.pagesview.PagesView: java.util.List findResults> = null;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setFindResults(java.util.List)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        java.util.List $r1;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $r1 := @parameter0: java.util.List;

        $r0.<cx.hell.android.lib.pagesview.PagesView: java.util.List findResults> = $r1;

        return;
    }

    public void setNook2(boolean)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        boolean $z0;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $z0 := @parameter0: boolean;

        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean nook2> = $z0;

        return;
    }

    public void setPageWithVolume(boolean)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        boolean $z0;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $z0 := @parameter0: boolean;

        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean pageWithVolume> = $z0;

        return;
    }

    public void setPagesProvider(cx.hell.android.lib.pagesview.PagesProvider)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        cx.hell.android.lib.pagesview.PagesProvider $r1;
        int[][] $r2;
        float[] $r3;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2;
        int[] $r4;
        byte $b3;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $r1 := @parameter0: cx.hell.android.lib.pagesview.PagesProvider;

        $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.lib.pagesview.PagesProvider pagesProvider> = $r1;

        $r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.lib.pagesview.PagesProvider pagesProvider>;

        if $r1 == null goto label7;

        $r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.lib.pagesview.PagesProvider pagesProvider>;

        $r2 = virtualinvoke $r1.<cx.hell.android.lib.pagesview.PagesProvider: int[][] getPageSizes()>();

        $r0.<cx.hell.android.lib.pagesview.PagesView: int[][] pageSizes> = $r2;

        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: float[] maxRealPageSize>;

        $r3[0] = 0.0F;

        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: float[] maxRealPageSize>;

        $r3[1] = 0.0F;

        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: float[] realDocumentSize>;

        $r3[0] = 0.0F;

        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: float[] realDocumentSize>;

        $r3[1] = 0.0F;

        $i0 = 0;

     label1:
        $r2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int[][] pageSizes>;

        $i1 = lengthof $r2;

        if $i0 < $i1 goto label3;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        if $i0 <= 0 goto label2;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        if $i0 <= 0 goto label2;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $f0 = (float) $i0;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int marginY>;

        $i0 = $i0 * 2;

        $f1 = (float) $i0;

        $f0 = $f0 - $f1;

        $r2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int[][] pageSizes>;

        $r4 = $r2[0];

        $i0 = $r4[1];

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $f1 = (float) $i0;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int marginX>;

        $i0 = $i0 * 2;

        $f2 = (float) $i0;

        $f1 = $f1 - $f2;

        $r2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int[][] pageSizes>;

        $r4 = $r2[0];

        $i0 = $r4[0];

        $f2 = (float) $i0;

        $f1 = $f1 / $f2;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        $r0.<cx.hell.android.lib.pagesview.PagesView: float scaling0> = $f0;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $i0 = $i0 / 2;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int left> = $i0;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $i0 = $i0 / 2;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int top> = $i0;

     label2:
        $r1 = $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.lib.pagesview.PagesProvider pagesProvider>;

        virtualinvoke $r1.<cx.hell.android.lib.pagesview.PagesProvider: void setOnImageRenderedListener(cx.hell.android.lib.pagesview.OnImageRenderedListener)>($r0);

        return;

     label3:
        $i1 = 0;

     label4:
        if $i1 < 2 goto label5;

        $i0 = $i0 + 1;

        goto label1;

     label5:
        $r2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int[][] pageSizes>;

        $r4 = $r2[$i0];

        $i2 = $r4[$i1];

        $f0 = (float) $i2;

        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: float[] maxRealPageSize>;

        $f1 = $r3[$i1];

        $b3 = $f0 cmpl $f1;

        if $b3 <= 0 goto label6;

        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: float[] maxRealPageSize>;

        $r2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int[][] pageSizes>;

        $r4 = $r2[$i0];

        $i2 = $r4[$i1];

        $f0 = (float) $i2;

        $r3[$i1] = $f0;

     label6:
        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: float[] realDocumentSize>;

        $f0 = $r3[$i1];

        $r2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int[][] pageSizes>;

        $r4 = $r2[$i0];

        $i2 = $r4[$i1];

        $f1 = (float) $i2;

        $f0 = $f0 + $f1;

        $r3[$i1] = $f0;

        $i1 = $i1 + 1;

        goto label4;

     label7:
        $r0.<cx.hell.android.lib.pagesview.PagesView: int[][] pageSizes> = null;

        goto label2;
    }

    public void setRotation(int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter0: int;

        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int rotation>;

        if $i1 != $i0 goto label1;

        return;

     label1:
        $r0.<cx.hell.android.lib.pagesview.PagesView: int rotation> = $i0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("rotation changed to ");

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int rotation>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("cx.hell.android.pdfview", $r2);

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void invalidate()>();

        return;
    }

    public void setShowZoomOnScroll(boolean)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        boolean $z0;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $z0 := @parameter0: boolean;

        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean showZoomOnScroll> = $z0;

        return;
    }

    public void setSideMargins(int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter0: int;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int marginX> = $i0;

        return;
    }

    public void setStartBookmark(cx.hell.android.pdfview.Bookmark, java.lang.String)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        cx.hell.android.pdfview.Bookmark $r1;
        java.lang.String $r2;
        cx.hell.android.pdfview.BookmarkEntry $r3;
        int $i0, $i1;
        int[][] $r4;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $r1 := @parameter0: cx.hell.android.pdfview.Bookmark;

        $r2 := @parameter1: java.lang.String;

        if $r1 == null goto label3;

        $r3 = virtualinvoke $r1.<cx.hell.android.pdfview.Bookmark: cx.hell.android.pdfview.BookmarkEntry getLast(java.lang.String)>($r2);

        $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.pdfview.BookmarkEntry bookmarkToRestore> = $r3;

        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.pdfview.BookmarkEntry bookmarkToRestore>;

        if $r3 != null goto label1;

        return;

     label1:
        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.pdfview.BookmarkEntry bookmarkToRestore>;

        $i0 = $r3.<cx.hell.android.pdfview.BookmarkEntry: int numberOfPages>;

        $r4 = $r0.<cx.hell.android.lib.pagesview.PagesView: int[][] pageSizes>;

        $i1 = lengthof $r4;

        if $i0 == $i1 goto label2;

        $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.pdfview.BookmarkEntry bookmarkToRestore> = null;

        return;

     label2:
        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.pdfview.BookmarkEntry bookmarkToRestore>;

        $i0 = $r3.<cx.hell.android.pdfview.BookmarkEntry: int page>;

        if $i0 <= 0 goto label3;

        $r3 = $r0.<cx.hell.android.lib.pagesview.PagesView: cx.hell.android.pdfview.BookmarkEntry bookmarkToRestore>;

        $i0 = $r3.<cx.hell.android.pdfview.BookmarkEntry: int page>;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int currentPage> = $i0;

     label3:
        return;
    }

    public void setTopMargin(int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter0: int;

        $i2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int marginY>;

        $i1 = $i0 - $i2;

        $i2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int top>;

        $i3 = $r0.<cx.hell.android.lib.pagesview.PagesView: int currentPage>;

        $i1 = $i3 * $i1;

        $i2 = $i2 + $i1;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int top> = $i2;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int marginY> = $i0;

        return;
    }

    public void setVerticalScrollLock(boolean)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        boolean $z0;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $z0 := @parameter0: boolean;

        $r0.<cx.hell.android.lib.pagesview.PagesView: boolean verticalScrollLock> = $z0;

        return;
    }

    public void setZoomIncrement(float)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        float $f0;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $f0 := @parameter0: float;

        $r0.<cx.hell.android.lib.pagesview.PagesView: float step> = $f0;

        return;
    }

    public void setZoomLayout(android.widget.LinearLayout)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        android.widget.LinearLayout $r1;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $r1 := @parameter0: android.widget.LinearLayout;

        $r0.<cx.hell.android.lib.pagesview.PagesView: android.widget.LinearLayout zoomLayout> = $r1;

        return;
    }

    public void setZoomLevel(int)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 := @parameter0: int;

        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomLevel>;

        if $i1 != $i0 goto label1;

        return;

     label1:
        $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomLevel> = $i0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("zoom level changed to ");

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomLevel>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("cx.hell.android.pdfview", $r2);

        $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomToRestore> = 0;

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void invalidate()>();

        return;
    }

    public cx.hell.android.pdfview.BookmarkEntry toBookmarkEntry()
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        cx.hell.android.pdfview.BookmarkEntry $r1;
        int $i0, $i1, $i2, $i3, $i4;
        int[][] $r2;
        float $f0, $f1;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $r1 = new cx.hell.android.pdfview.BookmarkEntry;

        $r2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int[][] pageSizes>;

        $i2 = lengthof $r2;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int currentPage>;

        $f0 = $r0.<cx.hell.android.lib.pagesview.PagesView: float scaling0>;

        $i3 = $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomLevel>;

        $f1 = (float) $i3;

        $f0 = $f0 * $f1;

        $i3 = $r0.<cx.hell.android.lib.pagesview.PagesView: int rotation>;

        $i4 = $r0.<cx.hell.android.lib.pagesview.PagesView: int left>;

        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int currentPage>;

        $i1 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getCurrentPageWidth(int)>($i1);

        $i1 = $i1 / 2;

        $i4 = $i4 - $i1;

        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int marginX>;

        $i4 = $i4 - $i1;

        specialinvoke $r1.<cx.hell.android.pdfview.BookmarkEntry: void <init>(int,int,float,int,int)>($i2, $i0, $f0, $i3, $i4);

        return $r1;
    }

    public void zoom(float)
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        float $f0, $f1;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $f0 := @parameter0: float;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomLevel>;

        $f1 = (float) $i0;

        $f1 = $f1 * $f0;

        $i0 = (int) $f1;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomLevel> = $i0;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int left>;

        $f1 = (float) $i0;

        $f1 = $f1 * $f0;

        $i0 = (int) $f1;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int left> = $i0;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int top>;

        $f1 = (float) $i0;

        $f0 = $f1 * $f0;

        $i0 = (int) $f0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int top> = $i0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("zoom level changed to ");

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomLevel>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("cx.hell.android.pdfview", $r2);

        $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomToRestore> = 0;

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void invalidate()>();

        return;
    }

    public void zoomFit()
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1;
        android.graphics.Point $r1;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int currentPage>;

        if $i1 >= 0 goto label3;

        $i1 = 0;

     label1:
        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomLevel>;

        $i2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $i0 = $i0 * $i2;

        $i2 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getCurrentPageWidth(int)>($i1);

        $i0 = $i0 / $i2;

        $i2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomLevel>;

        $i3 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $i2 = $i2 * $i3;

        $f0 = (float) $i2;

        $f1 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: float getCurrentPageHeight(int)>($i1);

        $f0 = $f0 / $f1;

        $i2 = (int) $f0;

        if $i2 >= $i0 goto label4;

     label2:
        $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomLevel> = $i2;

        $r1 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: android.graphics.Point getPagePositionInDocumentWithZoom(int)>($i1);

        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $i1 = $i1 / 2;

        $i0 = $r1.<android.graphics.Point: int x>;

        $i1 = $i1 + $i0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int left> = $i1;

        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $i1 = $i1 / 2;

        $i0 = $r1.<android.graphics.Point: int y>;

        $i1 = $i1 + $i0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int top> = $i1;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomToRestore> = 0;

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void invalidate()>();

        return;

     label3:
        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int currentPage>;

        goto label1;

     label4:
        $i2 = $i0;

        goto label2;
    }

    public void zoomWidth()
    {
        cx.hell.android.lib.pagesview.PagesView $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.RuntimeException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @this: cx.hell.android.lib.pagesview.PagesView;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int currentPage>;

        if $i0 >= 0 goto label2;

        $i1 = 0;

     label1:
        $i0 = specialinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: int getCurrentPageWidth(int)>($i1);

        if $i0 > 0 goto label3;

        $r1 = new java.lang.RuntimeException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("invalid page ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int currentPage>;

        goto label1;

     label3:
        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int top>;

        $i2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $i2 = $i2 / 2;

        $i1 = $i1 - $i2;

        $i2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $i1 = $i1 * $i2;

        $i1 = $i1 / $i0;

        $i2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int height>;

        $i2 = $i2 / 2;

        $i1 = $i1 + $i2;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int top> = $i1;

        $i1 = $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomLevel>;

        $i2 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $i3 = $r0.<cx.hell.android.lib.pagesview.PagesView: int marginX>;

        $i3 = $i3 * 2;

        $i2 = $i2 - $i3;

        $i1 = $i1 * $i2;

        $i0 = $i1 / $i0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomLevel> = $i0;

        $i0 = $r0.<cx.hell.android.lib.pagesview.PagesView: int width>;

        $i0 = $i0 / 2;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int left> = $i0;

        $r0.<cx.hell.android.lib.pagesview.PagesView: int zoomToRestore> = 0;

        virtualinvoke $r0.<cx.hell.android.lib.pagesview.PagesView: void invalidate()>();

        return;
    }

    public static void <clinit>()
    {
        <cx.hell.android.lib.pagesview.PagesView: java.lang.String TAG> = "cx.hell.android.pdfview";

        <cx.hell.android.lib.pagesview.PagesView: int MIN_TILE_WIDTH> = 256;

        <cx.hell.android.lib.pagesview.PagesView: int MIN_TILE_HEIGHT> = 128;

        <cx.hell.android.lib.pagesview.PagesView: int MAX_TILE_WIDTH> = 640;

        <cx.hell.android.lib.pagesview.PagesView: int MAX_TILE_PIXELS> = 230400;

        return;
    }
}
